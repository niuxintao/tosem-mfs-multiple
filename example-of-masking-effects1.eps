%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: example of masking effects.pdf
%%Creator: Adobe Acrobat 15.9.0
%%For: xintao
%%CreationDate: 10/26/2015, 4:34:35 PM
%%BoundingBox: 0 0 473 242
%%HiResBoundingBox: 0 0 472.5808 241.7450
%%CropBox: 0 0 472.5808 241.7450
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 940 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2015-10-26T16:16:54-05:00"
   xmp:CreatorTool="Microsoft® Word 2016"
   xmp:ModifyDate="2015-10-26T16:34:13-05:00"
   xmp:MetadataDate="2015-10-26T16:34:13-05:00"
   pdf:Producer="Microsoft® Word 2016"
   xmpMM:DocumentID="uuid:de92ec36-e8ee-426f-968b-5bf2b610e50c"
   xmpMM:InstanceID="uuid:db2b88b0-f643-4b44-ac74-0a56f71f573f">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>xintao</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -241.745 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 241.745 li
472.581 241.745 li
472.581 0 li
cp
clp
gsave
-.20459 241.999 mo
472.795 241.999 li
472.795 -.000793457 li
-.20459 -.000793457 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: JIIAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /JIIAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb2d8000000cc000000606376
7420b09bc4d20000012c0000051c6670676d73ee3d400000064800000d17
676c796623c2f1c9000097540000bad468656164f2889fb4000013600000
0036686865610dad0c0b0000139800000024686d7478ce2d4698000013bc
000031d06c6f6361d1389fcf0000458c0000203e6d617870210925440000
65cc000000206e616d65f0261fc6000065ec00000d4470726570a1c4507b
0000733000002422676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
fb000600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e40598574737271706f6e6d6c
6b6a696867666564625f5e5d5c5b5a59585554535251504f4e4d4c4b4a49
4847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625242322
1f181411100f0d0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
042651582320b00d44235921212d2c20204518684420b001602045b04676
688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0
282370b101283e01b0282370b10228453ab10200080d2d2c2045b0032545
6164b050515845441b2121592d2c2045b0004360442d2c01b00643b00743
650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c
58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b0
2c234445b02b23442d2c4b525845441b2121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0805158
0c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c642364
8bb81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d
2c4523456023456023456023766818b08062202d2cb00426b00426b00425
b0042545234520b003266062636820b0032661658a2344442d2c2045b000
5458b040442045b04061441b2121592d2c45b1302f4523456160b0016069
442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325456953
58441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f45
442d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b134
201bb3330034005944442d2cb0164358b00326458a586466b01f601b64b0
20606620581b21b04059b001615923586559b02923442310b029e01b2121
212121592d2cb0164358b004254564b020606620581b21b04059b0016123
586559b0292344b00425b00725082058021b0359b0052510b004252046b0
042523423cb0072510b006252046b00425b0016023423c2058011b0059b0
052510b00425b029e0b0072510b00625b029e0b00425b00725082058021b
0359b00425b003254348b00625b00325b0016043481b2159212121212121
212d2cb0164358b004254564b020606620581b21b04059b0016123581b65
59b0292344b00525b00825082058021b0359b0042510b005252046b00425
23423cb00425b0072508b0072510b006252046b00425b0016023423c2058
011b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0
b00525b00825082058021b0359b00525b003254348b00425b0072508b006
25b00325b0016043481b2159212121212121212d2c02b00425202046b004
252342b0052508b003254548212121212d2c02b0032520b0042508b00225
43482121212d2c452320451820b00050205823652359236820b040505821
b04059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c
4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb000
214b5458381b2121592d2cb002435458b0462b1b21212121592d2cb00243
5458b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb002
435458b0492b1b212121592d2c2320b000508a8a64b10003255458b0401b
b10103255458b005438b59b04f2b5923b0622b2321235865592d2cb10800
0c215460432d2c014623466023466123201020468a61b8ff80628ab14040
8a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a59
2d2cb012004b014b54422d2cb1020042b123018851b1400188535a58b910
000020885458b202010243604259b12401885158b920000040885458b202
0202436042b12401885458b2022002436042004b014b5258b20208024360
42591bb940000080885458b202040243604259b94000008063b801008854
58b202080243604259b94000010063b80200885458b202100243604259b1
2601885158b94000020063b80400885458b202400243604259b940000400
63b80800885458b202800243604259b12801885158b94000080063b81000
885458ba00020100000243604259595959595959b10002435458400a0540
084009400c020d021bb10102435458b2054008ba010000090100b30c010d
011bb18002435258b2054008b80180b109401bb901000002435258b20540
08ba0180000901401bb901800002435258b2054008b80200b109401bb205
4008ba010000090100595959b9400000808855b94000020063b804008855
5a58b30c000d011bb30c000d0159595942424242422d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d2cb0022563b0206066b00225b82000626023622d2c20456944
2d2c234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564b0022564b002
256164b00343525821206459b1024e2b23b000505865592d2c238a4a2345
64b0022564b002256164b00343525821206459b1014e2b23b00050586559
2d2c20b003254ab1024e2b8a103b2d2c20b003254ab1014e2b8a103b2d2c
b00325b003258ab0672b8a103b2d2cb00325b003258ab0682b8a103b2d2c
b0032546b003254660b004252eb00425b00425b0042620b000505821b06a
1bb06c592bb0032546b00325466061b08062208a2010233a232010233a2d
2cb0032547b003254760b0052547b0806361b00225b00625496323b00525
4ab080632058621b2159b0042646608a468a4660b02063612d2cb00426b0
0425b00425b00426b06e2b208a2010233a232010233a2d2c2320b0015458
21b00225b1024e2bb0805020605920606020b001515821211b20b0055158
21206661b0402361b100032550b00325b00325505a5820b00325618a5358
21b000591b21591bb00754582066616523211b2121b000595959b1024e2b
2d2cb00225b004254ab0005358b0001b8a8a238ab00159b0042546206661
20b00526b0062649b00526b00526b0702b236165b02060206661b0206165
2d2cb0022546208a20b000505821b1024e2b1b452321596165b00225103b
2d2cb0042620b802006220b80200638a236120b05d602bb00525118a128a
20398a58ba005d10000004266356602b23212010204620b1024e2b23611b
2321208a201049b1024e2b593b2d2cba005d10000009256356602bb00525
b00525b00526b06d2bb15d0725602bb00525b00525b00525b00525b06f2b
ba005d10000008266356602b20b0005258b0502bb00525b00525b00725b0
0725b00525b0712bb0021738b00052b00225b001525a58b00425b0062549
b00325b00525496020b0405258211bb000525820b0025458b00425b00425
b00725b0072549b00217381bb00425b00425b00425b0062549b002173859
5959595921212121212d2cb12501885058b94000020063b8040088545cb0
164b525b1bb001592d000001000000061c29124b73c55f0f3cf500190800
00000000bbeb7ccc00000000d184bc00fbfafd8b09ec0836000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
0000000000000000000008ca040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000004ec00ac0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac000000000000000000000000
0000000000000000000000000000000000000000020400ac000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000042800ac0000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000054c00630000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac00000000000000000000000000000000000000000000000003ad
0047000000000000000000000000000000000000000003e6000f00000000
0000000000000000052200aa000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000003f40010
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000003cb006d00000000
00000000000000000000000000000000046500a100000000000000000000
0000038000a1000000000000000000000000000000000000000000000000
000000000000000000000000035000a10482006c00000000000000000000
00000000000000000000000000000000000001ec00a10000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000003c900a100000000000000000000000000000000
000000000000000000000000060600a1049100a100000000000000000000
0000000000000000000004aa006600000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003c5
00a1000000000000000003ed00a1000000000000000000000000034f0049
00000000000000000000000000000000000000000359001c000000000000
000000000000048d009f0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000063e00370000
000000000000000000000000000000000000038300100000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000362005a000000000000
00000000000000000000000000000000000006dd005a0601005a00000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000002710025
000000000000000004ab0025000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000609002508430025
000000000000000000000000000000000000000004ed0025000000000000
00000728002503c400350000000000000000000000000000000004340060
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003a3
009900000000000000000000000000000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000321005100000000
0000000000000000000000000000000005ae005100000000000000000000
000002ae002100000000000000000000000004e600210000000000000000
000000000000000000000000000000000000000000000000000000000000
000005130021074b00210000000000000000000000000000000000000000
000000000000000000000000000000000000000004340094000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000005b80035000000000000000000000000000000000000
0000039f0022000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000002ac004400000000024e
004402e5004802b8004701c100240297002a000000000000000000000000
0297006c000000000456006c02e6006c02e60045000000000000000001f6
006c0230004201e3002302e9006c0000000003ef002c000000000286001f
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000026000ed0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
027300450273004500000000000000000000000000000000000000000000
000000000000000000000000000000000000026d0085026d007a00000000
000000000000000000000000024000840240007a0000000000000000026d
0085026d007a000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df00440000
0000000000000000000001bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df00440000
0000000000000000000001bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002300000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000034b
008e00000000028c008e000000000000000001a6008e0000000002e0008e
00000000046d008e000000000375005a02d8008e00000000000000000280
004602570004031400570000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000034b008e
0000000000000000000000000000000001a6008e0000000002e0008e0000
0000046d008e00000000000000000375005a0000000002d8008e00000000
025700040314005700000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf013c013c013c013c013c013c013c013c013c013c013c013c013c
013c01b801b801b801b801b801b801b801b801b8020b020b020b020b020b
020b020b020b020b020b020b020b020b0299029902990299029902990299
0299035b035b035b035b035b035b035b03e403e403e403e403e403e403e4
03e403e403e403e403e40470047004700470047004700470056305630563
05630563056305d705d705d705d706700670067006700670067006700670
067006700670067006700670067006700670067006700670067006700670
067006700670067006e906e906e906e906e906e906e906e906e906e906e9
06e906e906e907670767076707670767076707b707b707b707b708240824
082408240824082408240824082408240882091209120912091209120912
091209120947094709470947094709470947094709470947094709470947
09ca09ca09ca09ca09ca09ca09ca09ca0a520acd0acd0acd0acd0acd0acd
0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b2b0b930b930b93
0c200c200c200c200cc30cc30cc30cc30cc30cc30d120d120d120d120d70
0d700d700d700d700d700d700d700d700d700d700d700e070e070e070e07
0e070e070e650e650e650e650e650e650e650e650e650f370f370f370f37
0f370f370f370f370f370f370f370f370f370f370fe20fe20fe20fe20fe2
0fe20fe210ee11fb11fb12aa12aa12aa12aa136913691369136913691369
136913691369136913fe13fe13fe14c014c014c014c014c014c014c014c0
14c014c014c014c014c014c014c014c014c014c014c014c014c014c014c0
14c014c014c015a916da16da16da16da16da16da17a517a517a518c119d1
19d119d119d119d11a801a801a801a801a801a801a801a801a801a801a80
1a801a801a801a801a801a801a801a801a801a801a801a801b291b291b29
1b291b291b291b291b291b291c241cc71cc71cc71cc71cc71cc71cc71d66
1d661d661d661d661d661d661d661d661d661d661d661d661d661d661df0
1df01df01df01ed71ed71ed71ed71ed71ed7200620062006200620982098
209820982163216321632163216321632163216321632163216322382354
235423542354235423542354235423542354235423f723f723f723f723f7
23f723f723f723f723f723f723f724f824f824f824f824f824f8256d256d
256d256d256d256d256d256d256d256d256d256d26032603266e26e82769
27dd28cf28cf28cf28cf2948294829df2a462a9d2a9d2a9d2b002b982c07
2c712c712d132d132d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782d782d782d782d782d78
2d782d782d782d782d782d782d782d782d782d782dc92dc92dc92dc92dc9
2dc92dc92e232e232e232e232e232e232e232e232e232e232e232e232e23
2e232e232e232e232e232e232e232e232e232e232e232e232e232e232e23
2e232e232e232e232e232e4f2e582e582e582e582e582e582e582e582e58
2e582e582ea92f012f012f012f012f012f502fa12fa12fa12fa92fb12fb1
2fb12fb12fb12fb12fb12fb12fb12fb12fb12fb12fb12fb1300330033003
300330033003300330033003300330033003300330033003300330033003
300330033003300330033003300330033003300330033003300330033003
30033003306130b3314331fe327432ff339233e83480350d356b35d8365a
37133788381938dd39303a673afe3b5c3bac3c363ce93d623df33e863ed9
3f7e4010406b40d640de40e6415c41ee427942ce436643ed444d449a452d
45e6466046f446fc4752475a47df48a3496d4a284b3d4c174cea4cf24d9f
4da74e754e7e4e874e904e994ea24eab4eb44ebd4ec64ecf4ecf4ecf4ecf
4ed84ee14f3a4f8b4ffc50a25117519952245277530e5399539953995399
53e85438549154e055565608567e56ff578757d9587258f95902590b5914
591d5926592f59385941594a595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595359535953
595359535953595359535953595359535953595359535953595b595b59ad
59ad59ad59b559b559bd59bd59c559c559cd59d559d559d55a6b5a735a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b5a7b
5a7b5a7b5a7b5a7b5acc5acc5acc5acc5acc5b045b045b785b785bfd5bfd
5bfd5c535c535cb95cb95d095d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a
5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a5d6a000000010000101e00970005
0059000300020010002f00860000104b2422000100010000002d02220000
000300000000006400000000000300000001000e00640000000300000002
000e03040000000300000003002403120000000300000004000e00640000
000300000005001803360000000300000006000e00640000000300000007
0076034e0000000300000008002a000e0000000300000009002003c40000
00030000000a02a00064000000030000000b005603e4000000030000000c
002a043a000000030000000d02980464000000030000000e006c06fc0001
0000000000000032076800010000000000010007079a0001000000000002
000708ea0001000000000003001808f100010000000000040007079a0001
000000000005000c090900010000000000060007079a0001000000000007
003b091500010000000000080015076f0001000000000009001009500001
00000000000a0150079a000100000000000b002b0960000100000000000c
0015098b000100000000000d014c09a0000100000000000e00360aec0003
000104090000006400000003000104090001000e00640003000104090002
000e03040003000104090003002403120003000104090004000e00640003
000104090005001803360003000104090006000e00640003000104090007
0076034e0003000104090008002a000e0003000104090009002003c40003
00010409000a02a00064000300010409000b005603e4000300010409000c
002a043a000300010409000d02980464000300010409000e006c06fc00a9
002000320030003100350020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e00430061006c00690062007200690020006900730020
00610020006d006f006400650072006e002000730061006e007300200073
0065007200690066002000660061006d0069006c00790020007700690074
006800200073007500620074006c006500200072006f0075006e00640069
006e006700730020006f006e0020007300740065006d007300200061006e
006400200063006f0072006e006500720073002e00200049007400200066
00650061007400750072006500730020007200650061006c002000690074
0061006c006900630073002c00200073006d0061006c006c002000630061
00700073002c00200061006e00640020006d0075006c007400690070006c
00650020006e0075006d006500720061006c00200073006500740073002e
0020004900740073002000700072006f0070006f007200740069006f006e
007300200061006c006c006f00770020006800690067006800200069006d
007000610063007400200069006e002000740069006700680074006c0079
00200073006500740020006c0069006e006500730020006f006600200062
0069006700200061006e006400200073006d0061006c006c002000740065
0078007400200061006c0069006b0065002e002000430061006c00690062
00720069002700730020006d0061006e0079002000630075007200760065
007300200061006e006400200074006800650020006e0065007700200072
0061007300740065007200690073006500720020007400650061006d0020
0075007000200069006e0020006200690067006700650072002000730069
007a0065007300200074006f002000720065007600650061006c00200061
0020007700610072006d00200061006e006400200073006f006600740020
006300680061007200610063007400650072002e0052006500670075006c
00610072004d006900630072006f0073006f00660074003a002000430061
006c006900620072006900560065007200730069006f006e00200036002e
0031003100430061006c0069006200720069002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000740068
00650020004d006900630072006f0073006f00660074002000670072006f
007500700020006f006600200063006f006d00700061006e006900650073
002e004c007500630028006100730029002000640065002000470072006f
006f00740068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f006300740066006f006e00740073
0068007400740070003a002f002f0066006f006e00740066006100620072
0069006b002e0063006f006d0059006f00750020006d0061007900200075
007300650020007400680069007300200066006f006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
00680065002000450055004c004100200066006f00720020007400680065
002000700072006f006400750063007400200069006e0020007700680069
006300680020007400680069007300200066006f006e0074002000690073
00200069006e0063006c007500640065006400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e0074002e00200059006f00750020006d
006100790020006f006e006c0079002000280069002900200065006d0062
006500640020007400680069007300200066006f006e007400200069006e
00200063006f006e00740065006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200065
006d00620065006400640069006e00670020007200650073007400720069
006300740069006f006e007300200069006e0063006c0075006400650064
00200069006e0020007400680069007300200066006f006e0074003b0020
0061006e006400200028006900690029002000740065006d0070006f0072
006100720069006c007900200064006f0077006e006c006f006100640020
007400680069007300200066006f006e007400200074006f002000610020
007000720069006e0074006500720020006f00720020006f007400680065
00720020006f007500740070007500740020006400650076006900630065
00200074006f002000680065006c00700020007000720069006e00740020
0063006f006e00740065006e0074002e0068007400740070003a002f002f
007700770077002e006d006900630072006f0073006f00660074002e0063
006f006d002f007400790070006f006700720061007000680079002f0066
006f006e00740073002f00640065006600610075006c0074002e00610073
00700078a92032303135204d6963726f736f667420436f72706f72617469
6f6e2e20416c6c205269676874732052657365727665642e43616c696272
692069732061206d6f6465726e2073616e732073657269662066616d696c
79207769746820737562746c6520726f756e64696e6773206f6e20737465
6d7320616e6420636f726e6572732e204974206665617475726573207265
616c206974616c6963732c20736d616c6c20636170732c20616e64206d75
6c7469706c65206e756d6572616c20736574732e204974732070726f706f
7274696f6e7320616c6c6f77206869676820696d7061637420696e207469
6768746c7920736574206c696e6573206f662062696720616e6420736d61
6c6c207465787420616c696b652e2043616c696272692773206d616e7920
63757276657320616e6420746865206e6577207261737465726973657220
7465616d20757020696e206269676765722073697a657320746f20726576
65616c2061207761726d20616e6420736f6674206368617261637465722e
526567756c61724d6963726f736f66743a2043616c696272693a20323030
3556657273696f6e20362e313143616c6962726920697320612074726164
656d61726b206f6620746865204d6963726f736f66742067726f7570206f
6620636f6d70616e6965732e4c7563286173292064652047726f6f746874
74703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f677261
7068792f6374666f6e7473687474703a2f2f666f6e7466616272696b2e63
6f6d596f75206d617920757365207468697320666f6e7420617320706572
6d6974746564206279207468652045554c4120666f72207468652070726f
6475637420696e207768696368207468697320666f6e7420697320696e63
6c7564656420746f20646973706c617920616e64207072696e7420636f6e
74656e742e20596f75206d6179206f6e6c792028692920656d6265642074
68697320666f6e7420696e20636f6e74656e74206173207065726d697474
65642062792074686520656d62656464696e67207265737472696374696f
6e7320696e636c7564656420696e207468697320666f6e743b20616e6420
286969292074656d706f726172696c7920646f776e6c6f61642074686973
20666f6e7420746f2061207072696e746572206f72206f74686572206f75
747075742064657669636520746f2068656c70207072696e7420636f6e74
656e742e687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f666f6e74732f64656661756c742e6173707800>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143404114801f85
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d060a7c557a557bab7a557955775578ab77
55ba028600660285403c5576ab755504751475747503f47501ab75014475
0130750102007510752075030c7455725573ab7255007250728072b07204
3bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f
5570ab6f556e666d556a03251f6938675568ab67556638645565ab645563
386255613860555f385d555eab5d555c385a555bab5a5559385855570325
1f5638545555ab54555338515552ab51554f384e554e03251f4d384b554c
ab4b554a38485549ab4855473846554503381f001c101c201c0310b8ffc0
404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f
1a02290f1901434f19016f197f198f19030f18cf18024018292c460f17cf
17df17ef1704134017292e460016101620160315b8ffc0b3164d5446b8ff
c0b3163f4446b8ffc0b316313546b8ffc0401f162326460f15010f151f15
0245ef1501850003012001010001100120010308b8ffc0b401151f4603bd
0100010000050001019000542b4bb80800524bb008505bb00188b02553b0
0188b040515ab00688b000555a5b58b101018e59b101024354b0144b515a
58b101018e59858d8d001d424bb01d5358b203a0a01d42594bb0805358b2
0340401d42594bb0ff5358b20300001d42592b5e7375732b58404a080011
e011f0110315bf10cf10020f0f010f0fff0f020f0e1f0e020f0e1f0eff0e
030f0d1f0d020f0d1f0dff0d03160f0b1f0b02553f0b4f0b0208400f3135
46400e313746400d313746b8ffc0400e0c505446400b3f4346400b2d3046
2b2b2b2b2b2b5e745e735e737473747374745e735e5901755e73742b2b2b
2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b
5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b58b80142b2
12461fb80141b212461fb80140b212461fb8013fb212461fb8013eb21244
1fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb8
0139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135
b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211
551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211591f
b8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb801
28b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b2
11561fb80123b211571fb80122b211581fb80121b211591fb80120b2115a
1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8
011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117
b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b210
5f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1f
b8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb801
0ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2
105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f
1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f
621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641f
f40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f
621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671f
e50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e
681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311f
d60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d
2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1f
c70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40d4
c00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c
741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741f
b10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b
7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1f
a20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b
7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f
930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0a
a71f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b1b59012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
b1000243545841ff0284006402830064028200640281006402800064027f
0064027e0064027d0064027c0064027b0064027a00640279006402780064
02770064027600640275006402740064027300640271006402700064026f
0064026e0064026d0064026c0064026b0064026a00640269006402680064
026700640266006402650064026400640263006402620064026100640260
0064025f0064025e0064025d0064025c0064025b0064025a006402590064
025800640257006402560064025500640254006402530064025200640251
006402500064024f0064024e0064024d0064024c0064024b0064024a0064
024900640248006402470064024600640245006402440064024300640242
00640241006402400064023f0064023e0064023d0064023c0064023b0064
023a00640239006402380064023700640236006402350064023400640233
0064023200640231006402300064022f0064022e0064022d0064022c0064
022b0064022a006402290064022800640227006402260064022500640224
006402230064022200640221006402200064021f0064021e0064021d0064
021c0064021b0064021a0064021900640218006402170064021600640215
00640214006402130064021200640211006402100064020f0064020e0064
020d0064020c0064020b0064020a00640209006402080064020700640206
006402050064020441ff00640203006402020064020100640200006401ff
006401fe006401fd006401fc006401fb006401fa006401f9006401f80064
01f7006401f6006401f5006401f4006401f3006401f2006401f1006401f0
006401ef006401ee006401ed006401ec006401eb006401ea006401e90064
01e8006401e7006401e6006401e5006401e4006401e3006401e2006401e1
006401e0006401df006401de006401dd006401dc006401db006401da0064
01d9006401d8006401d7006401d6006401d5006401d4006401d3006401d2
006401d1006401d0006401cf006401ce006401cd006401cc006401cb0064
01ca006401c9006401c8006401c7006401c6006401c5006401c4006401c3
006401c2006401c1006401c0006401bf006401be006401bd006401bc0064
01bb006401ba006401b9006401b8006401b7006401b6006401b5006401b4
006401b3006401b2006401b1006401b0006401af006401ae006401ad0064
01ac006401ab006401aa006401a9006401a8006401a7006401a6006401a5
006401a4006401a3006401a2006401a1006401a00064019f0064019e0064
019d0064019c0064019b0064019a00640199006401980064019700640196
0064019500640194006401930064019200640191006401900064018f0064
018e0064018d0064018c0064018b0064018a006401890064018800640187
006401860064018500644180018400640183006401820064018100640180
0064017f0064017e0064017d0064017c0064017b0064017a006401790064
017800640177006401760064017500640174006401730064017200640171
006401700064016f0064016e0064016d0064016c0064016b0064016a0064
016900640168006401670064016600640165006401640064016300640162
00640161006401600064015f0064015e0064015d0064015c0064015b0064
015a00640159006401580064015700640156006401550064015400640153
00640152006401500064014f0064014e0064014c0064014b0064014a0064
014900640148006401470064014600640145006401440064014300642b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b185f5e000000>
[15329 16101 15405 997 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> JIIAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>JIIAAA+Calibri AddT42Char 
JIIAAA+Calibri /CharStrings get begin
/space 3 def
end
JIIAAA+Calibri /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/LRSZCA+Calibri /JIIAAA+Calibri findfont ct_VMDictPut
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
3.81941 20.3392 mo
( )sh
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
3.81941 42.7792 mo
( )sh
gsave
239.765 16.8592 mo
272.045 16.8592 li
272.045 3.3952 li
239.765 3.3952 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 382 24 <000200ac0000048f050e0012001f0098b0852b58401d3f2101131810014d
13100f014d13140d014d13120c014d13180b014d13bb02320000001affe8
b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8
ffe8b30b014d1abb021100090018010cb20e511bb80126b10554003fed3f
ed012fe12b2b2b2b2bd4e12b2b2b2b2b31305d1bb10e18b8010cb46c0e51
051bb80126b26c055400183f2b3f2b30315901140e022321222635113436
3321321e0207342e0223231133323e02048f56a5f0a6feee172929170125
a8e89d51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e8
9969b5844afc113e80c1>LRSZCA+Calibri AddT42Char 
2 880 47 <000100acfffa0158051400150061b0852b58b73f174f17af170300b8ffe8
b310014d00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8
ffe8b30b014d00ba0211000affc0b715014d0a10520555003f3f012f2be1
2b2b2b2b2b31305d1bb31052055500183f3f30315925140e0223222e0235
11343e0233321e02150158081421191822140809152117192114081a080c
070505070c0804da080c070505070c08>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/D 24 def
/I 47 def
end
LRSZCA+Calibri /Encoding get
dup 68 /D put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 35{/.notdef}rp /D 4{/.notdef}rp /I 182{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 13.7392 mo
(ID)
[2.75998 0 ]xsh
grestore
gsave
239.765 16.8592 mo
272.045 16.8592 li
272.045 3.3952 li
239.765 3.3952 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
254.405 13.7392 mo
( )sh
grestore
gsave
272.645 16.8592 mo
359.669 16.8592 li
359.669 3.3952 li
272.645 3.3952 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 2758 100 <0001000ffffa03d7050e00220080b0852b58b718400d014d181100b8ffc0
b40d014d0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06
b8fff6b30c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612
b80128b31d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b31301b
b2061d12b80128b46c1d510c5500183f3f2b3230315901140e0223211114
0e0223222e02351121222e0235343e023321321e0203d704090d08fe9408
14211918221408fe94080d080505080d080384080d090404c4131c1108fb
9e080c070505070c08046208111c13131d120808121d>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/T 100 def
end
LRSZCA+Calibri /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 35{/.notdef}rp /D 4{/.notdef}rp /I 10{/.notdef}rp /T 
171{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
295.585 13.7392 mo
(T)sh
grestore
gsave
272.645 16.8592 mo
359.669 16.8592 li
359.669 3.3952 li
272.645 3.3952 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 9556 286 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>LRSZCA+Calibri AddT42Char 
3 0 400 <00010051ffed02ce03ca00490110b0852b58400c2f4b3f4b4f4b7f4baf4b
0541b8fff0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b3
13014d41b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c
1b100d014d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f600
00ffc0400a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2e
dd370aeb115011601170110337113711163cdb411b05294a16e8054d003f
ed3f123939ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b12
39392f2fe12b2b2b2b2b2b31305d1b4025372edd6c110aeb6c0011101120
11030e033711371116293cdb6c411b05294a0516e86c054d00183f2b3f12
39392b1139392f2f5f5e5d2b2b30315901140e0223222e0435343e023332
1e0233323e0235342e0635343e0233321e0615140e0223222e0223220e02
15141e0602ce335e824e30574530160a04060b070b2b3f56382a44321b27
40505551402729527b5224483a291507030303070a06092236492f2a4029
1528405255534027010e456c4a260f171914241f131a10071b201b122336
252634281f222b3e563c3561492c0c1215100c0f16101119100716191613
23301c27352820222a3c5400>LRSZCA+Calibri AddT42Char 
3 1068 410 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/e 286 def
/s 400 def
/t 410 def
end
LRSZCA+Calibri /Encoding get
dup 101 /e put
dup 115 /s put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 35{/.notdef}rp /D 4{/.notdef}rp /I 10{/.notdef}rp /T 
16{/.notdef}rp /e 13{/.notdef}rp /s /t 139{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
300.985 13.7392 mo
(est )
[5.49792 4.31671 3.7316 0 ]xsh
grestore
gsave
272.645 16.8592 mo
359.669 16.8592 li
359.669 3.3952 li
272.645 3.3952 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 7370 258 <0002005cffed033f03ca0033004000f6b0852b5840200f421f422f42030b
0917340c0c014d34100d014d34180b014d34100f10014c34b801f7400e00
27270f00010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8
ffe8b30b014d3ab8ffe8b40f10014c3ab8020840141117c500341034023b
c0340100340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d
04002f3fed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b
5e5d392f10e12b2b2b2b323931305e5d1b400d0b17013417c56c34342e41
222ab8011b40166c00220116042222042e1dea6c2e4a0c3ddc6c0c4d0400
182f3f2b3f2b12392f5f5e5d2b1112392f2b5d3031592514060623222626
3535060623222e0235343e02333335342e0223220e0223222e0235343e04
33321e02150723220e0215141633323637033f101c1b1a1f0e3b91514773
512d3e74a8697c16314e393d6149310c080c0904071b4256663461885426
a48d4464421f5950416f3d180c0c06060c0c5a3f46254666414c704a2546
3450351b1d231d0810190f191d1a231d132c557e54c4172d3f2946534244
>LRSZCA+Calibri AddT42Char 
2 7790 272 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/a 258 def
/c 272 def
end
LRSZCA+Calibri /Encoding get
dup 97 /a put
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 35{/.notdef}rp /D 4{/.notdef}rp /I 10{/.notdef}rp /T 
12{/.notdef}rp /a /.notdef /c /.notdef /e 13{/.notdef}rp /s 
/t 139{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
316.945 13.7392 mo
(case)
[4.66995 5.28821 4.31671 0 ]xsh
grestore
gsave
272.645 16.8592 mo
359.669 16.8592 li
359.669 3.3952 li
272.645 3.3952 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
336.625 13.7392 mo
( )sh
grestore
gsave
360.265 16.8592 mo
417.529 16.8592 li
417.529 3.3952 li
360.265 3.3952 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 1718 75 <00020063ffed04e8052100130027009db0852b58401a141810014d14100f
014d14140d014d14120c014d14180b014d14b80233400920003000800003
001eb8ffe8b310014d1eb8fff0b30f014d1eb8ffecb30d014d1eb8ffeeb3
0c014d1eb8ffe8b30b014d1ebb0233000a00190129b20f5323b8012bb105
56003fed3fed012fe12b2b2b2b2bd45de12b2b2b2b2b31301bb10f19b801
29b46c0f530523b8012bb26c055600183f2b3f2b30315901140e0223222e
0235343e0233321e0207342e0223220e0215141e0233323e0204e84a93de
9492d58b444a94de948fd48d45b5275b987070985f29265a9772719a5e28
02969dfcb15f57a6f6a099faaf5f56a5f3a96ebd8b4e548cbb6772c08b4d
548fbc00>LRSZCA+Calibri AddT42Char 
2 13906 373 <00010099fffa05d003ca0050011eb0852b58401b12100b014d13180b014d
26100b0c014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b
014d13b8fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8
401e1e160d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f1001
4c0ab801f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27
b8fff0b310014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200
100106b24b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f
1239393fed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b
2b2b2b3931305d002b2b2b2b1bb14b10b80106b46c4b4a4124b80106400e
6c414a3e462d38492d4c194c054c00183f3f3f3f1239393f2b3f2b303159
25140e0223222e023511342e022322060711140e0223222e023511342e02
2322060711140e0223222e023511343e0233321e021515363633321e0217
3e0333321e021505d00812201819201308142c442e397345081320181721
1307162c432e397444081220191820130706121c17161d10074c8f493859
4430102d514b47245776491f19080b080404080b080223395e44245855fd
8b080b080404080b080223395e44245855fd8b080b080404080b08038408
0b090303090b0877554f1a2f412831442a133d66894c>LRSZCA+Calibri AddT42Char 
2 14734 381 <0002005affed03de03ca0013002700c9b0852b58401c3f29012812012911
01260d01260c012608012607012a03012902011eb8ffe8b310014d1eb8ff
f0b30f014d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1e
b8020a401e2f0a010a141810014d14100f014d14200d014d14120c014d14
180b014d14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b801
02b1054d003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d
5d5d5d5d5d5d5d5d1bb10f19b80101b46c0f4a0523b80102b26c054d0018
3f2b3f2b30315901140e0223222e0235343e0233321e0207342e0223220e
0215141e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e
6a4f496944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427e
b47c49826239345f824d4a826139345e8200>LRSZCA+Calibri AddT42Char 
3 2760 437 <00010094ffed039c03bc003200b8b0852b58401f3f34010b27100d014d27
0a0c014d27080b014d27100f10014c27100b014d27b801f9b6004011014d
001fb8fff0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8
b30b014d1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49
270b05194924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b
2b2bd42be12b2b2b2b2b3931305d1b40092d49270b0519490e24b80105b4
6c0e4d054c00183f3f2b3f1239393f30315925140e0223222e0235350606
23222e023511343e0233321e021511141e023332363711343e0233321e02
15039c07121d15171d11064d964d5a7b4c210714201818201308172f4830
3e7b4507141f191820120919080b080404080b0877554e3c678962022208
0b090303090b08fdf44f5f432558550275080b090303090b0800>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/O 75 def
/m 373 def
/o 381 def
/u 437 def
end
LRSZCA+Calibri /Encoding get
dup 79 /O put
dup 109 /m put
dup 111 /o put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 35{/.notdef}rp /D 4{/.notdef}rp /I 5{/.notdef}rp /O 
4{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 
7{/.notdef}rp /m /.notdef /o 3{/.notdef}rp /s /t /u 
138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 13.7392 mo
(Outcome)
[7.3085 5.79593 3.69849 4.66995 5.76282 8.86508 0 ]xsh
grestore
gsave
360.265 16.8592 mo
417.529 16.8592 li
417.529 3.3952 li
360.265 3.3952 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
406.825 13.7392 mo
( )sh
grestore
gsave
418.015 16.8592 mo
471.415 16.8592 li
471.415 3.3952 li
418.015 3.3952 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 2272 94 <00010047ffed0363052100490128b0852b58b90041ffe8b40f10014c41b8
fff0b30d014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d
41b8022c402b32401314014c324011014d243224320c1b180f10014c1b10
0d014d1b1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d
00b8ffc0b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb01
270037000a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c37
113711163cb8010cb5411b05295316b80129b10556003fed3f123939ed11
39392f2f2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b
2be12b2b2b2b2b31301bb1372eb80127b26c110ab80126b76c3711371116
293cb8010cb76c411b0529530516b80129b26c055600183f2b3f1239392b
1139392f2f2b2b30315901140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e060363
4377a15d416f573b170b04080c080e3350714a385d43243252696e685233
3b6991542b574d3c1306040203060b070b2f445d3a3650341a32536a6e6a
5333016b5b8e633216202218251f161d12072228231e375033374e3b3133
3e54714f517f562d0f191f130b111813121c13091c231d1d304225364e3c
32333d537100>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/S 94 def
end
LRSZCA+Calibri /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 35{/.notdef}rp /D 4{/.notdef}rp /I 5{/.notdef}rp /O 
3{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /.notdef 
/e 7{/.notdef}rp /m /.notdef /o 3{/.notdef}rp /s /t 
/u 138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 13.7392 mo
(State)
[5.06735 3.69849 5.28821 3.69846 0 ]xsh
grestore
gsave
418.015 16.8592 mo
471.415 16.8592 li
471.415 3.3952 li
418.015 3.3952 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
446.335 13.7392 mo
( )sh
grestore
239.285 3.39923 mo
239.765 3.39923 li
239.765 2.91925 li
239.285 2.91925 li
cp
ef
239.285 3.39923 mo
239.765 3.39923 li
239.765 2.91925 li
239.285 2.91925 li
cp
ef
239.765 3.39923 mo
272.045 3.39923 li
272.045 2.91925 li
239.765 2.91925 li
cp
ef
272.045 3.39923 mo
272.525 3.39923 li
272.525 2.91925 li
272.045 2.91925 li
cp
ef
272.525 3.39923 mo
359.669 3.39923 li
359.669 2.91925 li
272.525 2.91925 li
cp
ef
359.665 3.39923 mo
360.145 3.39923 li
360.145 2.91925 li
359.665 2.91925 li
cp
ef
360.145 3.39923 mo
417.529 3.39923 li
417.529 2.91925 li
360.145 2.91925 li
cp
ef
417.535 3.39923 mo
418.015 3.39923 li
418.015 2.91925 li
417.535 2.91925 li
cp
ef
418.015 3.39923 mo
471.415 3.39923 li
471.415 2.91925 li
418.015 2.91925 li
cp
ef
471.415 3.39923 mo
471.895 3.39923 li
471.895 2.91925 li
471.415 2.91925 li
cp
ef
471.415 3.39923 mo
471.895 3.39923 li
471.895 2.91925 li
471.415 2.91925 li
cp
ef
239.285 16.8592 mo
239.765 16.8592 li
239.765 3.3952 li
239.285 3.3952 li
cp
ef
272.045 16.8592 mo
272.525 16.8592 li
272.525 3.3952 li
272.045 3.3952 li
cp
ef
359.665 16.8592 mo
360.145 16.8592 li
360.145 3.3952 li
359.665 3.3952 li
cp
ef
417.535 16.8592 mo
418.015 16.8592 li
418.015 3.3952 li
417.535 3.3952 li
cp
ef
471.415 16.8592 mo
471.895 16.8592 li
471.895 3.3952 li
471.415 3.3952 li
cp
ef
gsave
239.765 30.7792 mo
272.045 30.7792 li
272.045 17.3392 li
239.765 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 27.6592 mo
(t)sh
grestore
gsave
239.765 30.7792 mo
272.045 30.7792 li
272.045 17.3392 li
239.765 17.3392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
4 5762 1005 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/one 1005 def
end
LRSZCA+Calibri /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 18{/.notdef}rp /D 4{/.notdef}rp /I 
5{/.notdef}rp /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef 
/c /.notdef /e 7{/.notdef}rp /m /.notdef /o 3{/.notdef}rp 
/s /t /u 138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 28.6192 mo
(1)sh
grestore
gsave
239.765 30.7792 mo
272.045 30.7792 li
272.045 17.3392 li
239.765 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 27.6592 mo
( )sh
grestore
gsave
272.645 30.7792 mo
294.029 30.7792 li
294.029 17.3392 li
272.645 17.3392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
4 5370 1004 <00020048ffed03c705210013002b010bb0852b584019281201291101260d
01260c012608012507012a03012902012db8ffc040250f024d602d011418
10014d14100f014d14160d014d140a0c014d14200b014d14180c014d14bb
022d00000020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8
fff6b30c014d20b8ffe8b60c014d24200120b8022d40090a200030004000
030ab8fff040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00
b8ffc0400a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003f
ed3fed11120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b
2b2b31305d2b5d5d5d5d5d5d5d5d1bb10f1bb8010ab46c0f530525b8010a
b26c055600183f2b3f2b30315901140e0223222e0235343e0233321e0207
342e0423220e0215141e0233323e0403c72f6db0817aa7662b306cb0807b
a7662bb00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b161
57a9f7a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72
8500>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/zero 1004 def
end
LRSZCA+Calibri /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 18{/.notdef}rp /D 4{/.notdef}rp 
/I 5{/.notdef}rp /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e 7{/.notdef}rp /m /.notdef /o 
3{/.notdef}rp /s /t /u 138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 27.6592 mo
(0)sh
grestore
gsave
272.645 30.7792 mo
294.029 30.7792 li
294.029 17.3392 li
272.645 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 27.6592 mo
( )sh
grestore
gsave
294.505 30.7792 mo
315.865 30.7792 li
315.865 17.3392 li
294.505 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 27.6592 mo
(0)sh
grestore
gsave
294.505 30.7792 mo
315.865 30.7792 li
315.865 17.3392 li
294.505 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 27.6592 mo
( )sh
grestore
gsave
316.465 30.7792 mo
337.825 30.7792 li
337.825 17.3392 li
316.465 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 27.6592 mo
(0)sh
grestore
gsave
316.465 30.7792 mo
337.825 30.7792 li
337.825 17.3392 li
316.465 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 27.6592 mo
( )sh
grestore
gsave
338.305 30.7792 mo
359.665 30.7792 li
359.665 17.3392 li
338.305 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 27.6592 mo
(0)sh
grestore
gsave
338.305 30.7792 mo
359.665 30.7792 li
359.665 17.3392 li
338.305 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 27.6592 mo
( )sh
grestore
gsave
360.265 30.7792 mo
417.529 30.7792 li
417.529 17.3392 li
360.265 17.3392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 1992 87 <000200acfffa03c7050e001c0029009fb0852b58b12406b8ffe8b310014d
06b8fff0b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b
014d06b802114017111d1810014d1d100f014d1d100c0d014c1d200b014d
1db80232b2001125b8010ab306060c23b8010bb315510c55003f3fed1239
2fed012fd4e12b2b2b2b10e12b2b2b2b2b3231301bb10625b8010ab56c06
060c1523b8010bb46c15510c5500183f3f2b12392f2b30315901140e0223
2311140e0223222e02351134363321321e0407342e0223231133323e0203
c74077ad789309132119192114082a1a01152a4d696d4c29b53b575d2c9f
9b4e6746240393619c6e3cfe2e080c070505070c0804aa282207173f5c79
574f6a340efdf9284763>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/P 87 def
end
LRSZCA+Calibri /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 18{/.notdef}rp /D 4{/.notdef}rp 
/I 5{/.notdef}rp /O /P 2{/.notdef}rp /S /T 12{/.notdef}rp 
/a /.notdef /c /.notdef /e 7{/.notdef}rp /m /.notdef 
/o 3{/.notdef}rp /s /t /u 138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 27.6592 mo
(Pass)
[5.75183 5.28821 4.31671 0 ]xsh
grestore
gsave
360.265 30.7792 mo
417.529 30.7792 li
417.529 17.3392 li
360.265 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
384.865 27.6592 mo
( )sh
grestore
gsave
418.015 30.7792 mo
471.415 30.7792 li
471.415 17.3392 li
418.015 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 27.6592 mo
(I)sh
grestore
gsave
418.015 30.7792 mo
471.415 30.7792 li
471.415 17.3392 li
418.015 17.3392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 9938 296 <00010025fffa02860578003c0088b0852b58b2161000b8ffe0b40b014d00
1bb8fff0b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b3
0b014d1bb801f9b2302a25b8ffd040121011014c250aed36471a26ed3048
204c1048003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c431301b40
11360aed6c36471a3026ed6c3048204c104800183f3f3f2b323f2b303159
01140e0223222e0223220e02151533321e02151406232311140e0223222e
02351123222635343e02333335343e0233321e0402860405080607151e29
1b2534200ec9080b0905120fc908132018182013087f101004080c087f23
486d4a2342240c0803050f13170e05090b091833513a6207111a132420fc
eb080b080404080b0803152024131a11075d5e8756290d0f0c131b00>LRSZCA+Calibri AddT42Char 
2 14408 374 <00010099fffa03a003ca003200b8b0852b58400f12100b014d13100b014d
3f34012a13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8
fff6b30c014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d01
4d0b100f014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b8
0106400a2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b
2b2b10e12b2b2b2b2b3931305d002b2b1bb12d10b80106400b6c2d4a2a19
2449194c054c00183f3f3f12393f2b30315925140e0223222e023511342e
022322060711140e0223222e023511343e0233321e021515363633321e02
1503a00812201819201208182e49303e7c44081220191820130706121c17
161d10074c974d5a7b4c2119080b080404080b08020f4d5e44245855fd8b
080b080404080b080384080b090303090b0877554f3d66896000>LRSZCA+Calibri AddT42Char 
2 15052 396 <00010099fffa02a703ca00330086b0852b58b4703501260fb8fff6b30c01
4d0fb8ffe8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f8
4012004013014d004011014d00200d014d001a0ab8012540092b4a260f15
2049154c003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d1bb12b
0ab80125400a6c2b4a260f152049154c00183f3f1239393f2b3031590114
0e0223222e0223220e020711140e0223222e023511343e0233321e021515
3e0333321e0602a70206090808171d24151930353a230812201918201307
06121c17161d100725413a391d0d21241d0c0403010362161e1109090908
142e4c37fdb0080b080404080b080384080b090303090b08833644270f03
080a0a090e1b>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/f 296 def
/n 374 def
/r 396 def
end
LRSZCA+Calibri /Encoding get
dup 102 /f put
dup 110 /n put
dup 114 /r put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 18{/.notdef}rp /D 4{/.notdef}rp 
/I 5{/.notdef}rp /O /P 2{/.notdef}rp /S /T 12{/.notdef}rp 
/a /.notdef /c /.notdef /e /f 6{/.notdef}rp /m 
/n /o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
425.935 27.6592 mo
(nfer)
[5.76282 3.36713 5.49792 0 ]xsh
grestore
gsave
418.015 30.7792 mo
471.415 30.7792 li
471.415 17.3392 li
418.015 17.3392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
444.415 27.6592 mo
( )sh
grestore
239.285 17.3392 mo
239.765 17.3392 li
239.765 16.8593 li
239.285 16.8593 li
cp
ef
239.765 17.3392 mo
272.045 17.3392 li
272.045 16.8593 li
239.765 16.8593 li
cp
ef
272.045 17.3392 mo
272.525 17.3392 li
272.525 16.8593 li
272.045 16.8593 li
cp
ef
272.525 17.3392 mo
294.029 17.3392 li
294.029 16.8593 li
272.525 16.8593 li
cp
ef
294.025 17.3392 mo
294.505 17.3392 li
294.505 16.8593 li
294.025 16.8593 li
cp
ef
294.505 17.3392 mo
315.865 17.3392 li
315.865 16.8593 li
294.505 16.8593 li
cp
ef
315.865 17.3392 mo
316.345 17.3392 li
316.345 16.8593 li
315.865 16.8593 li
cp
ef
316.345 17.3392 mo
337.825 17.3392 li
337.825 16.8593 li
316.345 16.8593 li
cp
ef
337.825 17.3392 mo
338.305 17.3392 li
338.305 16.8593 li
337.825 16.8593 li
cp
ef
338.305 17.3392 mo
359.665 17.3392 li
359.665 16.8593 li
338.305 16.8593 li
cp
ef
359.665 17.3392 mo
360.145 17.3392 li
360.145 16.8593 li
359.665 16.8593 li
cp
ef
360.145 17.3392 mo
417.529 17.3392 li
417.529 16.8593 li
360.145 16.8593 li
cp
ef
417.535 17.3392 mo
418.015 17.3392 li
418.015 16.8593 li
417.535 16.8593 li
cp
ef
418.015 17.3392 mo
471.415 17.3392 li
471.415 16.8593 li
418.015 16.8593 li
cp
ef
471.415 17.3392 mo
471.895 17.3392 li
471.895 16.8593 li
471.415 16.8593 li
cp
ef
239.285 30.7792 mo
239.765 30.7792 li
239.765 17.3392 li
239.285 17.3392 li
cp
ef
272.045 30.7792 mo
272.525 30.7792 li
272.525 17.3392 li
272.045 17.3392 li
cp
ef
294.025 30.7792 mo
294.505 30.7792 li
294.505 17.3392 li
294.025 17.3392 li
cp
ef
315.865 30.7792 mo
316.345 30.7792 li
316.345 17.3392 li
315.865 17.3392 li
cp
ef
337.825 30.7792 mo
338.305 30.7792 li
338.305 17.3392 li
337.825 17.3392 li
cp
ef
359.665 30.7792 mo
360.145 30.7792 li
360.145 17.3392 li
359.665 17.3392 li
cp
ef
417.535 30.7792 mo
418.015 30.7792 li
418.015 17.3392 li
417.535 17.3392 li
cp
ef
471.415 30.7792 mo
471.895 30.7792 li
471.895 17.3392 li
471.415 17.3392 li
cp
ef
gsave
239.765 44.6992 mo
272.045 44.6992 li
272.045 31.3792 li
239.765 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 41.6992 mo
(t)sh
grestore
gsave
239.765 44.6992 mo
272.045 44.6992 li
272.045 31.3792 li
239.765 31.3792 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
4 6166 1006 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/two 1006 def
end
LRSZCA+Calibri /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two 17{/.notdef}rp /D 
4{/.notdef}rp /I 5{/.notdef}rp /O /P 2{/.notdef}rp /S /T 
12{/.notdef}rp /a /.notdef /c /.notdef /e /f 6{/.notdef}rp 
/m /n /o 2{/.notdef}rp /r /s /t /u 
138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 42.6592 mo
(2)sh
grestore
gsave
239.765 44.6992 mo
272.045 44.6992 li
272.045 31.3792 li
239.765 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 41.6992 mo
( )sh
grestore
gsave
272.645 44.6992 mo
294.029 44.6992 li
294.029 31.3792 li
272.645 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 41.6992 mo
(0)sh
grestore
gsave
272.645 44.6992 mo
294.029 44.6992 li
294.029 31.3792 li
272.645 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 41.6992 mo
( )sh
grestore
gsave
294.505 44.6992 mo
315.865 44.6992 li
315.865 31.3792 li
294.505 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 41.6992 mo
(0)sh
grestore
gsave
294.505 44.6992 mo
315.865 44.6992 li
315.865 31.3792 li
294.505 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 41.6992 mo
( )sh
grestore
gsave
316.465 44.6992 mo
337.825 44.6992 li
337.825 31.3792 li
316.465 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 41.6992 mo
(0)sh
grestore
gsave
316.465 44.6992 mo
337.825 44.6992 li
337.825 31.3792 li
316.465 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 41.6992 mo
( )sh
grestore
gsave
338.305 44.6992 mo
359.665 44.6992 li
359.665 31.3792 li
338.305 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 41.6992 mo
(1)sh
grestore
gsave
338.305 44.6992 mo
359.665 44.6992 li
359.665 31.3792 li
338.305 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 41.6992 mo
( )sh
grestore
gsave
360.265 44.6992 mo
417.529 44.6992 li
417.529 31.3792 li
360.265 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 41.6992 mo
(Pass)
[5.75183 5.28821 4.31671 0 ]xsh
grestore
gsave
360.265 44.6992 mo
417.529 44.6992 li
417.529 31.3792 li
360.265 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
384.865 41.6992 mo
( )sh
grestore
gsave
418.015 44.6992 mo
471.415 44.6992 li
471.415 31.3792 li
418.015 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 41.6992 mo
(I)sh
grestore
gsave
418.015 44.6992 mo
471.415 44.6992 li
471.415 31.3792 li
418.015 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
425.935 41.6992 mo
(nfer)
[5.76282 3.36713 5.49792 0 ]xsh
grestore
gsave
418.015 44.6992 mo
471.415 44.6992 li
471.415 31.3792 li
418.015 31.3792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
444.415 41.6992 mo
( )sh
grestore
239.285 31.2592 mo
239.765 31.2592 li
239.765 30.7792 li
239.285 30.7792 li
cp
ef
239.765 31.2592 mo
272.045 31.2592 li
272.045 30.7792 li
239.765 30.7792 li
cp
ef
272.045 31.2592 mo
272.525 31.2592 li
272.525 30.7792 li
272.045 30.7792 li
cp
ef
272.525 31.2592 mo
294.029 31.2592 li
294.029 30.7792 li
272.525 30.7792 li
cp
ef
294.025 31.2592 mo
294.505 31.2592 li
294.505 30.7792 li
294.025 30.7792 li
cp
ef
294.505 31.2592 mo
315.865 31.2592 li
315.865 30.7792 li
294.505 30.7792 li
cp
ef
315.865 31.2592 mo
316.345 31.2592 li
316.345 30.7792 li
315.865 30.7792 li
cp
ef
316.345 31.2592 mo
337.825 31.2592 li
337.825 30.7792 li
316.345 30.7792 li
cp
ef
337.825 31.2592 mo
338.305 31.2592 li
338.305 30.7792 li
337.825 30.7792 li
cp
ef
338.305 31.2592 mo
359.665 31.2592 li
359.665 30.7792 li
338.305 30.7792 li
cp
ef
359.665 31.2592 mo
360.145 31.2592 li
360.145 30.7792 li
359.665 30.7792 li
cp
ef
360.145 31.2592 mo
417.529 31.2592 li
417.529 30.7792 li
360.145 30.7792 li
cp
ef
417.535 31.2592 mo
418.015 31.2592 li
418.015 30.7792 li
417.535 30.7792 li
cp
ef
418.015 31.2592 mo
471.415 31.2592 li
471.415 30.7792 li
418.015 30.7792 li
cp
ef
471.415 31.2592 mo
471.895 31.2592 li
471.895 30.7792 li
471.415 30.7792 li
cp
ef
239.285 44.6992 mo
239.765 44.6992 li
239.765 31.2592 li
239.285 31.2592 li
cp
ef
272.045 44.6992 mo
272.525 44.6992 li
272.525 31.2592 li
272.045 31.2592 li
cp
ef
294.025 44.6992 mo
294.505 44.6992 li
294.505 31.2592 li
294.025 31.2592 li
cp
ef
315.865 44.6992 mo
316.345 44.6992 li
316.345 31.2592 li
315.865 31.2592 li
cp
ef
337.825 44.6992 mo
338.305 44.6992 li
338.305 31.2592 li
337.825 31.2592 li
cp
ef
359.665 44.6992 mo
360.145 44.6992 li
360.145 31.2592 li
359.665 31.2592 li
cp
ef
417.535 44.6992 mo
418.015 44.6992 li
418.015 31.2592 li
417.535 31.2592 li
cp
ef
471.415 44.6992 mo
471.895 44.6992 li
471.895 31.2592 li
471.415 31.2592 li
cp
ef
gsave
239.765 58.7392 mo
272.045 58.7392 li
272.045 45.2992 li
239.765 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 55.6192 mo
(t)sh
grestore
gsave
239.765 58.7392 mo
272.045 58.7392 li
272.045 45.2992 li
239.765 45.2992 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
4 6540 1007 <00010067ffed0392052100580147b0852b58b9005affc0401c0f024d605a
01310810014d31100f014d31100c0d014c31200b014d31b80235400a4e53
264e4e1813014d40b8ffe840260f014d26200f014d40264e4e2640030e1b
0810014d1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8
022db500080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b3
0f014d0eb8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ff
c0b30f014d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf3
202005495316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b
5d2b2b012f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910
e12b2b2b2b31305d2b1b400c0f3b010b033b113b11164936b8010b400d6c
53202cf36c20200549530516b8010bb26c055600183f2b3f12392f2b392b
1139392f2f5f5e5d30315901140e0223222e0635343633321e0233323e02
35342e022323222e0235343e023333323e0235342e0223220e0223222e02
35343e0633321e0215140e0207151e0303923e74aa6b4171583a0f080603
0e0d0935536f44426444222b53794d7b080f0b07060b0e0971426949271a
3451353a614c320a070b0703020608133a556f405a885b2d203e5a3b436f
502d0172598f6637151d1f0e0e141d15241c202520223e55323758402207
101a1513190f07224059372849361f232823050f1b160f17110e13242318
2e5475473d6951390b020735506b>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/three 1007 def
end
LRSZCA+Calibri /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three 16{/.notdef}rp 
/D 4{/.notdef}rp /I 5{/.notdef}rp /O /P 2{/.notdef}rp /S 
/T 12{/.notdef}rp /a /.notdef /c /.notdef /e /f 
6{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /t 
/u 138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 56.5792 mo
(3)sh
grestore
gsave
239.765 58.7392 mo
272.045 58.7392 li
272.045 45.2992 li
239.765 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 55.6192 mo
( )sh
grestore
gsave
272.645 58.7392 mo
294.029 58.7392 li
294.029 45.2992 li
272.645 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 55.6192 mo
(0)sh
grestore
gsave
272.645 58.7392 mo
294.029 58.7392 li
294.029 45.2992 li
272.645 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 55.6192 mo
( )sh
grestore
gsave
294.505 58.7392 mo
315.865 58.7392 li
315.865 45.2992 li
294.505 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 55.6192 mo
(0)sh
grestore
gsave
294.505 58.7392 mo
315.865 58.7392 li
315.865 45.2992 li
294.505 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 55.6192 mo
( )sh
grestore
gsave
316.465 58.7392 mo
337.825 58.7392 li
337.825 45.2992 li
316.465 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 55.6192 mo
(1)sh
grestore
gsave
316.465 58.7392 mo
337.825 58.7392 li
337.825 45.2992 li
316.465 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 55.6192 mo
( )sh
grestore
gsave
338.305 58.7392 mo
359.665 58.7392 li
359.665 45.2992 li
338.305 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 55.6192 mo
(0)sh
grestore
gsave
338.305 58.7392 mo
359.665 58.7392 li
359.665 45.2992 li
338.305 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 55.6192 mo
( )sh
grestore
gsave
360.265 58.7392 mo
417.529 58.7392 li
417.529 45.2992 li
360.265 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 55.6192 mo
(Pass)
[5.75183 5.28821 4.31671 0 ]xsh
grestore
gsave
360.265 58.7392 mo
417.529 58.7392 li
417.529 45.2992 li
360.265 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
384.865 55.6192 mo
( )sh
grestore
gsave
418.015 58.7392 mo
471.415 58.7392 li
471.415 45.2992 li
418.015 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 55.6192 mo
(I)sh
grestore
gsave
418.015 58.7392 mo
471.415 58.7392 li
471.415 45.2992 li
418.015 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
425.935 55.6192 mo
(nfer)
[5.76282 3.36713 5.49792 0 ]xsh
grestore
gsave
418.015 58.7392 mo
471.415 58.7392 li
471.415 45.2992 li
418.015 45.2992 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
444.415 55.6192 mo
( )sh
grestore
239.285 45.1792 mo
239.765 45.1792 li
239.765 44.6992 li
239.285 44.6992 li
cp
ef
239.765 45.1792 mo
272.045 45.1792 li
272.045 44.6992 li
239.765 44.6992 li
cp
ef
272.045 45.1792 mo
272.525 45.1792 li
272.525 44.6992 li
272.045 44.6992 li
cp
ef
272.525 45.1792 mo
294.029 45.1792 li
294.029 44.6992 li
272.525 44.6992 li
cp
ef
294.025 45.1792 mo
294.505 45.1792 li
294.505 44.6992 li
294.025 44.6992 li
cp
ef
294.505 45.1792 mo
315.865 45.1792 li
315.865 44.6992 li
294.505 44.6992 li
cp
ef
315.865 45.1792 mo
316.345 45.1792 li
316.345 44.6992 li
315.865 44.6992 li
cp
ef
316.345 45.1792 mo
337.825 45.1792 li
337.825 44.6992 li
316.345 44.6992 li
cp
ef
337.825 45.1792 mo
338.305 45.1792 li
338.305 44.6992 li
337.825 44.6992 li
cp
ef
338.305 45.1792 mo
359.665 45.1792 li
359.665 44.6992 li
338.305 44.6992 li
cp
ef
359.665 45.1792 mo
360.145 45.1792 li
360.145 44.6992 li
359.665 44.6992 li
cp
ef
360.145 45.1792 mo
417.529 45.1792 li
417.529 44.6992 li
360.145 44.6992 li
cp
ef
417.535 45.1792 mo
418.015 45.1792 li
418.015 44.6992 li
417.535 44.6992 li
cp
ef
418.015 45.1792 mo
471.415 45.1792 li
471.415 44.6992 li
418.015 44.6992 li
cp
ef
471.415 45.1792 mo
471.895 45.1792 li
471.895 44.6992 li
471.415 44.6992 li
cp
ef
239.285 58.7392 mo
239.765 58.7392 li
239.765 45.1792 li
239.285 45.1792 li
cp
ef
272.045 58.7392 mo
272.525 58.7392 li
272.525 45.1792 li
272.045 45.1792 li
cp
ef
294.025 58.7392 mo
294.505 58.7392 li
294.505 45.1792 li
294.025 45.1792 li
cp
ef
315.865 58.7392 mo
316.345 58.7392 li
316.345 45.1792 li
315.865 45.1792 li
cp
ef
337.825 58.7392 mo
338.305 58.7392 li
338.305 45.1792 li
337.825 45.1792 li
cp
ef
359.665 58.7392 mo
360.145 58.7392 li
360.145 45.1792 li
359.665 45.1792 li
cp
ef
417.535 58.7392 mo
418.015 58.7392 li
418.015 45.1792 li
417.535 45.1792 li
cp
ef
471.415 58.7392 mo
471.895 58.7392 li
471.895 45.1792 li
471.415 45.1792 li
cp
ef
gsave
239.765 72.6592 mo
272.045 72.6592 li
272.045 59.2192 li
239.765 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 69.5392 mo
(t)sh
grestore
gsave
239.765 72.6592 mo
272.045 72.6592 li
272.045 59.2192 li
239.765 59.2192 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
4 7094 1008 <00020030fffa03d30514002a002e0125b0852b58403a252e01262d01272c
01242701242601251c01261b01231a012419012518012517012616012615
01261401261001260f012405012404012b1b0130b8ffc040120f024d6030
012d16180f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c
2e2e10b8fffc401d0f024d101810014d10100f014d10100d014d100a0c01
4d10100b014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8
ffe0400a0b014d0404302f271b2eb8010b400a042b2110100a21520a5500
3f3f12392f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133
cd2b2b2b2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d
5d1bb3271b102eb8010b400b6c042b2110100a21520a5500183f3f12392f
1239332b3232303159011406232311140e0223222e02351121222e023534
3e0237013e0333321e0215113332160123012103d3141292081420191820
1307fdea0c100d0502060a0701d205131e2c1e21311e10921115fea102fe
5b01a701702126fef0080b080404080b08011006101e18131e19170d0312
080c080305080d09fcc62302e9fd3a00>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/four 1008 def
end
LRSZCA+Calibri /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
15{/.notdef}rp /D 4{/.notdef}rp /I 5{/.notdef}rp /O /P 2{/.notdef}rp 
/S /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 
/f 6{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s 
/t /u 138{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 70.4992 mo
(4)sh
grestore
gsave
239.765 72.6592 mo
272.045 72.6592 li
272.045 59.2192 li
239.765 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 69.5392 mo
( )sh
grestore
gsave
272.645 72.6592 mo
294.029 72.6592 li
294.029 59.2192 li
272.645 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 69.5392 mo
(0)sh
grestore
gsave
272.645 72.6592 mo
294.029 72.6592 li
294.029 59.2192 li
272.645 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 69.5392 mo
( )sh
grestore
gsave
294.505 72.6592 mo
315.865 72.6592 li
315.865 59.2192 li
294.505 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 69.5392 mo
(0)sh
grestore
gsave
294.505 72.6592 mo
315.865 72.6592 li
315.865 59.2192 li
294.505 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 69.5392 mo
( )sh
grestore
gsave
316.465 72.6592 mo
337.825 72.6592 li
337.825 59.2192 li
316.465 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 69.5392 mo
(1)sh
grestore
gsave
316.465 72.6592 mo
337.825 72.6592 li
337.825 59.2192 li
316.465 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 69.5392 mo
( )sh
grestore
gsave
338.305 72.6592 mo
359.665 72.6592 li
359.665 59.2192 li
338.305 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 69.5392 mo
(1)sh
grestore
gsave
338.305 72.6592 mo
359.665 72.6592 li
359.665 59.2192 li
338.305 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 69.5392 mo
( )sh
grestore
gsave
360.265 72.6592 mo
417.529 72.6592 li
417.529 59.2192 li
360.265 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 69.5392 mo
(Pass)
[5.75183 5.28821 4.31671 0 ]xsh
grestore
gsave
360.265 72.6592 mo
417.529 72.6592 li
417.529 59.2192 li
360.265 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
384.865 69.5392 mo
( )sh
grestore
gsave
418.015 72.6592 mo
471.415 72.6592 li
471.415 59.2192 li
418.015 59.2192 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 1046 60 <000100acfffa03f8051400330080b0852b58401131100b014d30180b014d
2f100b014d210ab8ffe8b310014d0ab8fff0b30f014d0ab8fff0b30d014d
0ab8fff6b30c014d0ab8ffe8b30b014d0ab80211400c152752210a101b52
10550555003f3f3f1239393f012fe12b2b2b2b2b3231302b2b2b1b400b27
52210a101b521055055500183f3f3f1239393f30315925140e0223222626
270111140e0223222e023511343e0233321e021511013e0333321e021514
06070101161603f80714221b232c1607fe24081421191822140808142218
1921140801ca061017211a1a2013070d12fe5301ce11071c080d08050610
0a0287fd79070d070505070d0704da080c070505070c08fdc1023f090c07
0405080c070d1a17fdfffd9a1a13>LRSZCA+Calibri AddT42Char 
3 3086 449 <00010035fffa058403bc00450131b0852b58b90047ffc0403d0f014d3808
0c014d29380137080c014d252e01262101262001261f01261e01261d0127
1c012804012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b3
10014d10b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0
400c0d014d0f200c014d0f414910b8ffe040200f014d3f104f106f107f10
04104012164810334925493a902c012c200f014d2cb8ffc0401013164867
2c772c02452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f01
2f2b2b2b2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b
1b401d41490f101f103f104f10040c10401216481040334925493a502c01
032cb8ffc04012131648262c362c02022c010d042c174c094c00183f3fd5
5f5e5d5d2b5f5dc43f3f1acd2b5e5d3f30315901140607010e0323222e02
27032707030e0323222e022701262635343e0233321e0217131737133e03
33321e0217131737133e0333321e0205840405fef7030d17281e1f2a190c
03bd0202af030d1a291e1f27190c03fef90504081320171c22120803d902
02c70209121f19181f120802d70201d6020913211a181d1107039f07140f
fca90b0e080304080e0a028d0909fd730b0e080304080e0a03570f140709
0b070203070d09fd1a090902e6090d070303070c08fd18090902e6090d07
0302080a>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/K 60 def
/w 449 def
end
LRSZCA+Calibri /Encoding get
dup 75 /K put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
15{/.notdef}rp /D 4{/.notdef}rp /I /.notdef /K 3{/.notdef}rp /O 
/P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c 
/.notdef /e /f 6{/.notdef}rp /m /n /o 2{/.notdef}rp 
/r /s /t /u /.notdef /w 136{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 69.5392 mo
(Known)
[5.74084 5.79593 5.85114 7.89352 0 ]xsh
grestore
gsave
418.015 72.6592 mo
471.415 72.6592 li
471.415 59.2192 li
418.015 59.2192 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
454.135 69.5392 mo
( )sh
grestore
239.285 59.2192 mo
239.765 59.2192 li
239.765 58.7392 li
239.285 58.7392 li
cp
ef
239.765 59.2192 mo
272.045 59.2192 li
272.045 58.7392 li
239.765 58.7392 li
cp
ef
272.045 59.2192 mo
272.525 59.2192 li
272.525 58.7392 li
272.045 58.7392 li
cp
ef
272.525 59.2192 mo
294.029 59.2192 li
294.029 58.7392 li
272.525 58.7392 li
cp
ef
294.025 59.2192 mo
294.505 59.2192 li
294.505 58.7392 li
294.025 58.7392 li
cp
ef
294.505 59.2192 mo
315.865 59.2192 li
315.865 58.7392 li
294.505 58.7392 li
cp
ef
315.865 59.2192 mo
316.345 59.2192 li
316.345 58.7392 li
315.865 58.7392 li
cp
ef
316.345 59.2192 mo
337.825 59.2192 li
337.825 58.7392 li
316.345 58.7392 li
cp
ef
337.825 59.2192 mo
338.305 59.2192 li
338.305 58.7392 li
337.825 58.7392 li
cp
ef
338.305 59.2192 mo
359.665 59.2192 li
359.665 58.7392 li
338.305 58.7392 li
cp
ef
359.665 59.2192 mo
360.145 59.2192 li
360.145 58.7392 li
359.665 58.7392 li
cp
ef
360.145 59.2192 mo
417.529 59.2192 li
417.529 58.7392 li
360.145 58.7392 li
cp
ef
417.535 59.2192 mo
418.015 59.2192 li
418.015 58.7392 li
417.535 58.7392 li
cp
ef
418.015 59.2192 mo
471.415 59.2192 li
471.415 58.7392 li
418.015 58.7392 li
cp
ef
471.415 59.2192 mo
471.895 59.2192 li
471.895 58.7392 li
471.415 58.7392 li
cp
ef
239.285 72.6592 mo
239.765 72.6592 li
239.765 59.2192 li
239.285 59.2192 li
cp
ef
272.045 72.6592 mo
272.525 72.6592 li
272.525 59.2192 li
272.045 59.2192 li
cp
ef
294.025 72.6592 mo
294.505 72.6592 li
294.505 59.2192 li
294.025 59.2192 li
cp
ef
315.865 72.6592 mo
316.345 72.6592 li
316.345 59.2192 li
315.865 59.2192 li
cp
ef
337.825 72.6592 mo
338.305 72.6592 li
338.305 59.2192 li
337.825 59.2192 li
cp
ef
359.665 72.6592 mo
360.145 72.6592 li
360.145 59.2192 li
359.665 59.2192 li
cp
ef
417.535 72.6592 mo
418.015 72.6592 li
418.015 59.2192 li
417.535 59.2192 li
cp
ef
471.415 72.6592 mo
471.895 72.6592 li
471.895 59.2192 li
471.415 59.2192 li
cp
ef
gsave
239.765 86.5792 mo
272.045 86.5792 li
272.045 73.1392 li
239.765 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 83.4592 mo
(t)sh
grestore
gsave
239.765 86.5792 mo
272.045 86.5792 li
272.045 73.1392 li
239.765 73.1392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
4 7530 1009 <00010065ffed0396050e003e00fcb0852b58400d27370127360126080126
030140b8ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c
37ba02110028ffc0402810014d28400f014d280e4f326f327f3203321d18
10014d1d100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f02
4d00b8ffc0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c
3af42022012222052c5118b8010bb10556003fed3f12392f5ded10ed1139
2f2b0110d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d
5d1bb41313182c36b8012c40116c223af46c0022010b032222052c510518
b8010bb26c055600183f2b3f12392f5f5e5d2b2b11392f30315901140e02
23222e0635343e0233321e0233323e0235342e0223220623222635113436
3321321e02151406232111363633321e0203964680b16c3c6c54360f0605
0203080b070a2a4769484370512e27517c563d58261c181f1d023d080f0a
051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b1108
191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe9505023561
8a00>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/five 1009 def
end
LRSZCA+Calibri /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five 14{/.notdef}rp /D 4{/.notdef}rp /I /.notdef /K 3{/.notdef}rp 
/O /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef 
/c /.notdef /e /f 6{/.notdef}rp /m /n /o 
2{/.notdef}rp /r /s /t /u /.notdef /w 136{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 84.4192 mo
(5)sh
grestore
gsave
239.765 86.5792 mo
272.045 86.5792 li
272.045 73.1392 li
239.765 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 83.4592 mo
( )sh
grestore
gsave
272.645 86.5792 mo
294.029 86.5792 li
294.029 73.1392 li
272.645 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 83.4592 mo
(0)sh
grestore
gsave
272.645 86.5792 mo
294.029 86.5792 li
294.029 73.1392 li
272.645 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 83.4592 mo
( )sh
grestore
gsave
294.505 86.5792 mo
315.865 86.5792 li
315.865 73.1392 li
294.505 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 83.4592 mo
(1)sh
grestore
gsave
294.505 86.5792 mo
315.865 86.5792 li
315.865 73.1392 li
294.505 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 83.4592 mo
( )sh
grestore
gsave
316.465 86.5792 mo
337.825 86.5792 li
337.825 73.1392 li
316.465 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 83.4592 mo
(0)sh
grestore
gsave
316.465 86.5792 mo
337.825 86.5792 li
337.825 73.1392 li
316.465 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 83.4592 mo
( )sh
grestore
gsave
338.305 86.5792 mo
359.665 86.5792 li
359.665 73.1392 li
338.305 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 83.4592 mo
(0)sh
grestore
gsave
338.305 86.5792 mo
359.665 86.5792 li
359.665 73.1392 li
338.305 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 83.4592 mo
( )sh
grestore
gsave
360.265 86.5792 mo
417.529 86.5792 li
417.529 73.1392 li
360.265 73.1392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 632 38 <000100acfffa0354050e00270083b0852b58b10713b8ffe8b310014d13b8
fff0b30f014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d
13b80211b50d1d001e1d07b8010cb313131906b80128b322511955003f3f
ed12392fed012f2fc41139e12b2b2b2b2b3231301bb11307b8010cb56c13
13192206b80128b46c2251195500183f3f2b12392f2b30315901140e0223
211121321e0215140e02232111140e0223222e02351134363321321e0203
54040a0d07fe2601c0070d0a04040a0d07fe400814201a18221408291702
46070d0a0404c4131c1108fe4807101b15131b1109fde5070d070505070d
0704ae271f08121d>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/F 38 def
end
LRSZCA+Calibri /Encoding get
dup 70 /F put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five 14{/.notdef}rp /D /.notdef /F 2{/.notdef}rp /I /.notdef 
/K 3{/.notdef}rp /O /P 2{/.notdef}rp /S /T 12{/.notdef}rp 
/a /.notdef /c /.notdef /e /f 6{/.notdef}rp /m 
/n /o 2{/.notdef}rp /r /s /t /u /.notdef 
/w 136{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 83.4592 mo
(F)sh
grestore
gsave
360.265 86.5792 mo
417.529 86.5792 li
417.529 73.1392 li
360.265 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.345 84.4192 mo
(2)sh
grestore
gsave
360.265 86.5792 mo
417.529 86.5792 li
417.529 73.1392 li
360.265 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
373.825 83.4592 mo
( )sh
grestore
gsave
360.265 86.5792 mo
417.529 86.5792 li
417.529 73.1392 li
360.265 73.1392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
3 8400 894 <00010085fea701f3058b00230032b0852b58401503100b014d03100f014d
03100c0d014c03151f0b85003f2f012f332b2b2b31301bb21f0b8500183f
2f303159010602151412171616060623222e02272e0335343e02373e0333
321e0201ef5f5d5f5b05010e1d19121a130c033652381c1f395233010910
1c16171c10020562c9fe59d6d7fe5acb0c110b050206080566d1d8dd7171
dcd9d26704060603060a1000>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/parenleft 894 def
end
LRSZCA+Calibri /Encoding get
dup 40 /parenleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 7{/.notdef}rp /zero /one /two 
/three /four /five 14{/.notdef}rp /D /.notdef /F 2{/.notdef}rp 
/I /.notdef /K 3{/.notdef}rp /O /P 2{/.notdef}rp /S 
/T 12{/.notdef}rp /a /.notdef /c /.notdef /e /f 
6{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /t 
/u /.notdef /w 136{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
376.345 83.4592 mo
(\()sh
grestore
gsave
360.265 86.5792 mo
417.529 86.5792 li
417.529 73.1392 li
360.265 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
379.705 83.4592 mo
(F)sh
grestore
gsave
360.265 86.5792 mo
417.529 86.5792 li
417.529 73.1392 li
360.265 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
384.745 84.4192 mo
(1)sh
grestore
gsave
360.265 86.5792 mo
417.529 86.5792 li
417.529 73.1392 li
360.265 73.1392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
3 8562 895 <0001007afea701e7058b00210043b0852b58b90012fff0b30b014d12b8ff
f0b30f014d12b8fff0b50c0d014c1200b8ffc0b60b014d001a0a85003f2f
012f2b322b2b2b31301bb21a0a8500183f2f30315901140e02070e032322
26263637361235340227263e0233321e0217161201e71c385136030c131a
121a1d0d01055c5e5e5e0402101c17151c1108026775021971ddd8d16605
080602050b110cca01a7d7d601a7c909100a0603060604cdfe4f>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/parenright 895 def
end
LRSZCA+Calibri /Encoding get
dup 41 /parenright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five 14{/.notdef}rp /D /.notdef /F 
2{/.notdef}rp /I /.notdef /K 3{/.notdef}rp /O /P 2{/.notdef}rp 
/S /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 
/f 6{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s 
/t /u /.notdef /w 136{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
388.225 83.4592 mo
(\))sh
grestore
gsave
360.265 86.5792 mo
417.529 86.5792 li
417.529 73.1392 li
360.265 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
391.705 83.4592 mo
( )sh
grestore
gsave
418.015 86.5792 mo
471.415 86.5792 li
471.415 73.1392 li
418.015 73.1392 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 12674 336 <00030035fe93038903c8003e004e005f0116b0852b584015122d47100f01
4d47080c014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d
3fb8ffe0b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707
b8ffe0b310014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040
340b014d0058100f014d58201012014c582a25400b12014c250f30070338
4ada0c53e81515603803e93c482a2042d9384a5bd9204f003fed3fed1239
3fed1112392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b11
12173910cd2b10cd2b2b2b10cd2b2b2b10cd31301b40270f300703380c4a
da6c0c151553e86c151560383c03e96c3c482a203842d96c384a205bd96c
204f00183f2b3f2b12393f2b1112392f2b10c62b12173930315901140623
23161615140e0223222627060615141617171e0315140e0223222e023534
3e0237262635343637262635343e023332161721321601342623220e0215
141633323e0213342627270e0315141633323e020389130f81231c325d80
4e37631b12174136eb4370522e346ba6716d99622c10213120312f32251f
24345c814c29471f01101111fefe655d30472f17655b31482f17535f51e9
2029180984764b653e1b0374231f24572f4e78532c1d16122e1e232e020a
02213d593b3e70553125405934213e383319194c2c3d6026255d424d7a54
2d090821fef15c672038492859661f3748fd5e3a3f0208192d2928154143
1d303e00>LRSZCA+Calibri AddT42Char 
3 3600 455 <00010022fe94037c03bc00240071b0852b58b9001bfff040350b014d371b
01291b0118180b014d261801260e360e022709011a400b014d3a1a011938
0b014d3b19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b
5d2b015d5d5d2b5d5d2b1b400c1f49190a13490a4b044f004b00183f3f3f
3f12393f3031592103060623222e023713262627012634363633321e0217
0133133e023332161614070233780631321a201102067c091003febf0810
241e1e22140905010103f8061122201c241106feb51011050c140e013904
120a035c15180e0503080f0dfd2e02d6130b05050e181200>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/g 336 def
/y 455 def
end
LRSZCA+Calibri /Encoding get
dup 103 /g put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five 14{/.notdef}rp /D /.notdef /F 
2{/.notdef}rp /I /.notdef /K 3{/.notdef}rp /O /P 2{/.notdef}rp 
/S /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 
/f /g 5{/.notdef}rp /m /n /o 2{/.notdef}rp /r 
/s /t /u /.notdef /w /.notdef /y 134{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 83.4592 mo
(Strategy)
[5.06735 3.69849 3.85294 5.28821 3.69849 5.49792 5.19977 0 ]xsh
grestore
gsave
418.015 86.5792 mo
471.415 86.5792 li
471.415 73.1392 li
418.015 73.1392 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
460.375 83.4592 mo
( )sh
grestore
239.285 73.1392 mo
239.765 73.1392 li
239.765 72.6592 li
239.285 72.6592 li
cp
ef
239.765 73.1392 mo
272.045 73.1392 li
272.045 72.6592 li
239.765 72.6592 li
cp
ef
272.045 73.1392 mo
272.525 73.1392 li
272.525 72.6592 li
272.045 72.6592 li
cp
ef
272.525 73.1392 mo
294.029 73.1392 li
294.029 72.6592 li
272.525 72.6592 li
cp
ef
294.025 73.1392 mo
294.505 73.1392 li
294.505 72.6592 li
294.025 72.6592 li
cp
ef
294.505 73.1392 mo
315.865 73.1392 li
315.865 72.6592 li
294.505 72.6592 li
cp
ef
315.865 73.1392 mo
316.345 73.1392 li
316.345 72.6592 li
315.865 72.6592 li
cp
ef
316.345 73.1392 mo
337.825 73.1392 li
337.825 72.6592 li
316.345 72.6592 li
cp
ef
337.825 73.1392 mo
338.305 73.1392 li
338.305 72.6592 li
337.825 72.6592 li
cp
ef
338.305 73.1392 mo
359.665 73.1392 li
359.665 72.6592 li
338.305 72.6592 li
cp
ef
359.665 73.1392 mo
360.145 73.1392 li
360.145 72.6592 li
359.665 72.6592 li
cp
ef
360.145 73.1392 mo
417.529 73.1392 li
417.529 72.6592 li
360.145 72.6592 li
cp
ef
417.535 73.1392 mo
418.015 73.1392 li
418.015 72.6592 li
417.535 72.6592 li
cp
ef
418.015 73.1392 mo
471.415 73.1392 li
471.415 72.6592 li
418.015 72.6592 li
cp
ef
471.415 73.1392 mo
471.895 73.1392 li
471.895 72.6592 li
471.415 72.6592 li
cp
ef
239.285 86.5792 mo
239.765 86.5792 li
239.765 73.1392 li
239.285 73.1392 li
cp
ef
272.045 86.5792 mo
272.525 86.5792 li
272.525 73.1392 li
272.045 73.1392 li
cp
ef
294.025 86.5792 mo
294.505 86.5792 li
294.505 73.1392 li
294.025 73.1392 li
cp
ef
315.865 86.5792 mo
316.345 86.5792 li
316.345 73.1392 li
315.865 73.1392 li
cp
ef
337.825 86.5792 mo
338.305 86.5792 li
338.305 73.1392 li
337.825 73.1392 li
cp
ef
359.665 86.5792 mo
360.145 86.5792 li
360.145 73.1392 li
359.665 73.1392 li
cp
ef
417.535 86.5792 mo
418.015 86.5792 li
418.015 73.1392 li
417.535 73.1392 li
cp
ef
471.415 86.5792 mo
471.895 86.5792 li
471.895 73.1392 li
471.415 73.1392 li
cp
ef
gsave
239.765 100.499 mo
272.045 100.499 li
272.045 87.0592 li
239.765 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 97.3792 mo
(t)sh
grestore
gsave
239.765 100.499 mo
272.045 100.499 li
272.045 87.0592 li
239.765 87.0592 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
3 13394 970 <0002006bffed03bd05200034004800c6b0852b58b9004affc040170f024d
604a012b753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a
35016a35014b35013a35012b350135b80243b670000120000100b8ffe0b3
0f014d00b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff303005
26b80100b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b
5d5de15d5d5d5d5d12392f10e15d5d5d5d5d3231305d2b1b4009303aff6c
3030051326b80100b46c13590544b80115b26c055f00183f2b3f2b12392f
2b30315901140e0223222e0435343e0433321e0615140e0223222e022322
0e02073e0333321e0207342e0223220e0207141e0233323e0203bd346ca6
71517c5c3d2510122e4f77a66e254c402c0e07040201070b090b26364d33
5d865529031a414d563169905926ae17365a42254a453f1a213f5e3f405e
3e1d01a3559f7949284a6c8aa45e53aa9e8b673c090f120b0d0f130e121a
10080e110e4c80a95c0f1e180f396589603a5f42240d171f1281ae692d30
5165>LRSZCA+Calibri AddT42Char 
4 7952 1010 <ffff006bffed03bd0520020603ca0000>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/six 1010 def
end
LRSZCA+Calibri /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five /six 13{/.notdef}rp /D /.notdef 
/F 2{/.notdef}rp /I /.notdef /K 3{/.notdef}rp /O /P 
2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /.notdef 
/e /f /g 5{/.notdef}rp /m /n /o 2{/.notdef}rp 
/r /s /t /u /.notdef /w /.notdef /y 
134{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 98.3392 mo
(6)sh
grestore
gsave
239.765 100.499 mo
272.045 100.499 li
272.045 87.0592 li
239.765 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 97.3792 mo
( )sh
grestore
gsave
272.645 100.499 mo
294.029 100.499 li
294.029 87.0592 li
272.645 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 97.3792 mo
(0)sh
grestore
gsave
272.645 100.499 mo
294.029 100.499 li
294.029 87.0592 li
272.645 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 97.3792 mo
( )sh
grestore
gsave
294.505 100.499 mo
315.865 100.499 li
315.865 87.0592 li
294.505 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 97.3792 mo
(1)sh
grestore
gsave
294.505 100.499 mo
315.865 100.499 li
315.865 87.0592 li
294.505 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 97.3792 mo
( )sh
grestore
gsave
316.465 100.499 mo
337.825 100.499 li
337.825 87.0592 li
316.465 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 97.3792 mo
(0)sh
grestore
gsave
316.465 100.499 mo
337.825 100.499 li
337.825 87.0592 li
316.465 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 97.3792 mo
( )sh
grestore
gsave
338.305 100.499 mo
359.665 100.499 li
359.665 87.0592 li
338.305 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 97.3792 mo
(1)sh
grestore
gsave
338.305 100.499 mo
359.665 100.499 li
359.665 87.0592 li
338.305 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 97.3792 mo
( )sh
grestore
gsave
360.265 100.499 mo
417.529 100.499 li
417.529 87.0592 li
360.265 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 97.3792 mo
(F)sh
grestore
gsave
360.265 100.499 mo
417.529 100.499 li
417.529 87.0592 li
360.265 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.345 98.3392 mo
(1)sh
grestore
gsave
360.265 100.499 mo
417.529 100.499 li
417.529 87.0592 li
360.265 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
373.945 97.3792 mo
( )sh
grestore
gsave
418.015 100.499 mo
471.415 100.499 li
471.415 87.0592 li
418.015 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 97.3792 mo
(I)sh
grestore
gsave
418.015 100.499 mo
471.415 100.499 li
471.415 87.0592 li
418.015 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
425.935 97.3792 mo
(nfer)
[5.76282 3.36713 5.49792 0 ]xsh
grestore
gsave
418.015 100.499 mo
471.415 100.499 li
471.415 87.0592 li
418.015 87.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
444.415 97.3792 mo
( )sh
grestore
239.285 87.0592 mo
239.765 87.0592 li
239.765 86.5792 li
239.285 86.5792 li
cp
ef
239.765 87.0592 mo
272.045 87.0592 li
272.045 86.5792 li
239.765 86.5792 li
cp
ef
272.045 87.0592 mo
272.525 87.0592 li
272.525 86.5792 li
272.045 86.5792 li
cp
ef
272.525 87.0592 mo
294.029 87.0592 li
294.029 86.5792 li
272.525 86.5792 li
cp
ef
294.025 87.0592 mo
294.505 87.0592 li
294.505 86.5792 li
294.025 86.5792 li
cp
ef
294.505 87.0592 mo
315.865 87.0592 li
315.865 86.5792 li
294.505 86.5792 li
cp
ef
315.865 87.0592 mo
316.345 87.0592 li
316.345 86.5792 li
315.865 86.5792 li
cp
ef
316.345 87.0592 mo
337.825 87.0592 li
337.825 86.5792 li
316.345 86.5792 li
cp
ef
337.825 87.0592 mo
338.305 87.0592 li
338.305 86.5792 li
337.825 86.5792 li
cp
ef
338.305 87.0592 mo
359.665 87.0592 li
359.665 86.5792 li
338.305 86.5792 li
cp
ef
359.665 87.0592 mo
360.145 87.0592 li
360.145 86.5792 li
359.665 86.5792 li
cp
ef
360.145 87.0592 mo
417.529 87.0592 li
417.529 86.5792 li
360.145 86.5792 li
cp
ef
417.535 87.0592 mo
418.015 87.0592 li
418.015 86.5792 li
417.535 86.5792 li
cp
ef
418.015 87.0592 mo
471.415 87.0592 li
471.415 86.5792 li
418.015 86.5792 li
cp
ef
471.415 87.0592 mo
471.895 87.0592 li
471.895 86.5792 li
471.415 86.5792 li
cp
ef
239.285 100.499 mo
239.765 100.499 li
239.765 87.0592 li
239.285 87.0592 li
cp
ef
272.045 100.499 mo
272.525 100.499 li
272.525 87.0592 li
272.045 87.0592 li
cp
ef
294.025 100.499 mo
294.505 100.499 li
294.505 87.0592 li
294.025 87.0592 li
cp
ef
315.865 100.499 mo
316.345 100.499 li
316.345 87.0592 li
315.865 87.0592 li
cp
ef
337.825 100.499 mo
338.305 100.499 li
338.305 87.0592 li
337.825 87.0592 li
cp
ef
359.665 100.499 mo
360.145 100.499 li
360.145 87.0592 li
359.665 87.0592 li
cp
ef
417.535 100.499 mo
418.015 100.499 li
418.015 87.0592 li
417.535 87.0592 li
cp
ef
471.415 100.499 mo
471.895 100.499 li
471.895 87.0592 li
471.415 87.0592 li
cp
ef
gsave
239.765 114.419 mo
272.045 114.419 li
272.045 100.979 li
239.765 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 111.299 mo
(t)sh
grestore
gsave
239.765 114.419 mo
272.045 114.419 li
272.045 100.979 li
239.765 100.979 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
4 7968 1011 <00010063fffa03af050e001f00f2b0852b58b90011ffe8400a1121014c11
1010014d11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8
fff8400a0b014d74110126110110b8ffe8400a1121014c101010014d10b8
ffe8b30f014d10b8fff0b30d014d10b8ffe8400b0b0c014c751001261001
06b8fff0b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ff
d8b40b014d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d
15b8ffe0b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2b
cd2b2b31305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b1bb2051a11b801
2db46c1a510b5500183f3f2b3230315901140e0207010e03232226263637
0121222635343e023321321e0203af03050906fe2e050f17241a22261102
0601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c0f0903
060d130d044a2824131c130906121c00>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/seven 1011 def
end
LRSZCA+Calibri /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five /six /seven 12{/.notdef}rp /D 
/.notdef /F 2{/.notdef}rp /I /.notdef /K 3{/.notdef}rp /O 
/P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c 
/.notdef /e /f /g 5{/.notdef}rp /m /n /o 
2{/.notdef}rp /r /s /t /u /.notdef /w /.notdef 
/y 134{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 112.259 mo
(7)sh
grestore
gsave
239.765 114.419 mo
272.045 114.419 li
272.045 100.979 li
239.765 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 111.299 mo
( )sh
grestore
gsave
272.645 114.419 mo
294.029 114.419 li
294.029 100.979 li
272.645 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 111.299 mo
(0)sh
grestore
gsave
272.645 114.419 mo
294.029 114.419 li
294.029 100.979 li
272.645 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 111.299 mo
( )sh
grestore
gsave
294.505 114.419 mo
315.865 114.419 li
315.865 100.979 li
294.505 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 111.299 mo
(1)sh
grestore
gsave
294.505 114.419 mo
315.865 114.419 li
315.865 100.979 li
294.505 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 111.299 mo
( )sh
grestore
gsave
316.465 114.419 mo
337.825 114.419 li
337.825 100.979 li
316.465 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 111.299 mo
(1)sh
grestore
gsave
316.465 114.419 mo
337.825 114.419 li
337.825 100.979 li
316.465 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 111.299 mo
( )sh
grestore
gsave
338.305 114.419 mo
359.665 114.419 li
359.665 100.979 li
338.305 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 111.299 mo
(0)sh
grestore
gsave
338.305 114.419 mo
359.665 114.419 li
359.665 100.979 li
338.305 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 111.299 mo
( )sh
grestore
gsave
360.265 114.419 mo
417.529 114.419 li
417.529 100.979 li
360.265 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 111.299 mo
(F)sh
grestore
gsave
360.265 114.419 mo
417.529 114.419 li
417.529 100.979 li
360.265 100.979 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.345 112.259 mo
(1)sh
grestore
gsave
360.265 114.419 mo
417.529 114.419 li
417.529 100.979 li
360.265 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
373.945 111.299 mo
( )sh
grestore
gsave
418.015 114.419 mo
471.415 114.419 li
471.415 100.979 li
418.015 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 111.299 mo
(I)sh
grestore
gsave
418.015 114.419 mo
471.415 114.419 li
471.415 100.979 li
418.015 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
425.935 111.299 mo
(nfer)
[5.76282 3.36713 5.49792 0 ]xsh
grestore
gsave
418.015 114.419 mo
471.415 114.419 li
471.415 100.979 li
418.015 100.979 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
444.415 111.299 mo
( )sh
grestore
239.285 100.979 mo
239.765 100.979 li
239.765 100.499 li
239.285 100.499 li
cp
ef
239.765 100.979 mo
272.045 100.979 li
272.045 100.499 li
239.765 100.499 li
cp
ef
272.045 100.979 mo
272.525 100.979 li
272.525 100.499 li
272.045 100.499 li
cp
ef
272.525 100.979 mo
294.029 100.979 li
294.029 100.499 li
272.525 100.499 li
cp
ef
294.025 100.979 mo
294.505 100.979 li
294.505 100.499 li
294.025 100.499 li
cp
ef
294.505 100.979 mo
315.865 100.979 li
315.865 100.499 li
294.505 100.499 li
cp
ef
315.865 100.979 mo
316.345 100.979 li
316.345 100.499 li
315.865 100.499 li
cp
ef
316.345 100.979 mo
337.825 100.979 li
337.825 100.499 li
316.345 100.499 li
cp
ef
337.825 100.979 mo
338.305 100.979 li
338.305 100.499 li
337.825 100.499 li
cp
ef
338.305 100.979 mo
359.665 100.979 li
359.665 100.499 li
338.305 100.499 li
cp
ef
359.665 100.979 mo
360.145 100.979 li
360.145 100.499 li
359.665 100.499 li
cp
ef
360.145 100.979 mo
417.529 100.979 li
417.529 100.499 li
360.145 100.499 li
cp
ef
417.535 100.979 mo
418.015 100.979 li
418.015 100.499 li
417.535 100.499 li
cp
ef
418.015 100.979 mo
471.415 100.979 li
471.415 100.499 li
418.015 100.499 li
cp
ef
471.415 100.979 mo
471.895 100.979 li
471.895 100.499 li
471.415 100.499 li
cp
ef
239.285 114.419 mo
239.765 114.419 li
239.765 100.979 li
239.285 100.979 li
cp
ef
272.045 114.419 mo
272.525 114.419 li
272.525 100.979 li
272.045 100.979 li
cp
ef
294.025 114.419 mo
294.505 114.419 li
294.505 100.979 li
294.025 100.979 li
cp
ef
315.865 114.419 mo
316.345 114.419 li
316.345 100.979 li
315.865 100.979 li
cp
ef
337.825 114.419 mo
338.305 114.419 li
338.305 100.979 li
337.825 100.979 li
cp
ef
359.665 114.419 mo
360.145 114.419 li
360.145 100.979 li
359.665 100.979 li
cp
ef
417.535 114.419 mo
418.015 114.419 li
418.015 100.979 li
417.535 100.979 li
cp
ef
471.415 114.419 mo
471.895 114.419 li
471.895 100.979 li
471.415 100.979 li
cp
ef
gsave
239.765 128.339 mo
272.045 128.339 li
272.045 114.899 li
239.765 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 125.219 mo
(t)sh
grestore
gsave
239.765 128.339 mo
272.045 128.339 li
272.045 114.899 li
239.765 114.899 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
3 13952 972 <00030052ffed03ba052100270037004701a4b0852b58b90036fff0b40f11
014c36b8fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34
b8fff0b40f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b3
0f014d49b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10
014c30b8fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d
014c28100f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e
180f014d14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38
100f10014c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8
ffe0b30f014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d
00b8ffc0b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f
10014c42b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b01
4d0a353d052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2b
d42b2b2b2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10
e12b2b2b2b31305d2b002b2b2b2b2b2b2b2b1b400f353d05192dfd6c1959
0545fd6c055f00183f2b3f2b12393930315901140e0223222e0235343e02
372e0335343e0233321e0215140e02071e0303342e0223220615141e0217
363613342e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c
5c402131639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c
656c2a224567443f5f3d1f85848083014c54835a2e2a52784d3d66564b22
1f45515c36447758332f516e3f335e544920234a555f025f2a4430196255
27433c391f347efda22e4b413d211f3e42492c616a6b>LRSZCA+Calibri AddT42Char 
4 8314 1012 <ffff0052ffed03ba0521020603cc0000>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/eight 1012 def
end
LRSZCA+Calibri /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five /six /seven /eight 11{/.notdef}rp 
/D /.notdef /F 2{/.notdef}rp /I /.notdef /K 3{/.notdef}rp 
/O /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef 
/c /.notdef /e /f /g 5{/.notdef}rp /m /n 
/o 2{/.notdef}rp /r /s /t /u /.notdef /w 
/.notdef /y 134{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 126.179 mo
(8)sh
grestore
gsave
239.765 128.339 mo
272.045 128.339 li
272.045 114.899 li
239.765 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 125.219 mo
( )sh
grestore
gsave
272.645 128.339 mo
294.029 128.339 li
294.029 114.899 li
272.645 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 125.219 mo
(0)sh
grestore
gsave
272.645 128.339 mo
294.029 128.339 li
294.029 114.899 li
272.645 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 125.219 mo
( )sh
grestore
gsave
294.505 128.339 mo
315.865 128.339 li
315.865 114.899 li
294.505 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 125.219 mo
(1)sh
grestore
gsave
294.505 128.339 mo
315.865 128.339 li
315.865 114.899 li
294.505 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 125.219 mo
( )sh
grestore
gsave
316.465 128.339 mo
337.825 128.339 li
337.825 114.899 li
316.465 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 125.219 mo
(1)sh
grestore
gsave
316.465 128.339 mo
337.825 128.339 li
337.825 114.899 li
316.465 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 125.219 mo
( )sh
grestore
gsave
338.305 128.339 mo
359.665 128.339 li
359.665 114.899 li
338.305 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 125.219 mo
(1)sh
grestore
gsave
338.305 128.339 mo
359.665 128.339 li
359.665 114.899 li
338.305 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 125.219 mo
( )sh
grestore
gsave
360.265 128.339 mo
417.529 128.339 li
417.529 114.899 li
360.265 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 125.219 mo
(F)sh
grestore
gsave
360.265 128.339 mo
417.529 128.339 li
417.529 114.899 li
360.265 114.899 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.345 126.179 mo
(1)sh
grestore
gsave
360.265 128.339 mo
417.529 128.339 li
417.529 114.899 li
360.265 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
373.945 125.219 mo
( )sh
grestore
gsave
418.015 128.339 mo
471.415 128.339 li
471.415 114.899 li
418.015 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 125.219 mo
(Known)
[5.74084 5.79593 5.85114 7.89352 0 ]xsh
grestore
gsave
418.015 128.339 mo
471.415 128.339 li
471.415 114.899 li
418.015 114.899 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
454.135 125.219 mo
( )sh
grestore
239.285 114.899 mo
239.765 114.899 li
239.765 114.419 li
239.285 114.419 li
cp
ef
239.765 114.899 mo
272.045 114.899 li
272.045 114.419 li
239.765 114.419 li
cp
ef
272.045 114.899 mo
272.525 114.899 li
272.525 114.419 li
272.045 114.419 li
cp
ef
272.525 114.899 mo
294.029 114.899 li
294.029 114.419 li
272.525 114.419 li
cp
ef
294.025 114.899 mo
294.505 114.899 li
294.505 114.419 li
294.025 114.419 li
cp
ef
294.505 114.899 mo
315.865 114.899 li
315.865 114.419 li
294.505 114.419 li
cp
ef
315.865 114.899 mo
316.345 114.899 li
316.345 114.419 li
315.865 114.419 li
cp
ef
316.345 114.899 mo
337.825 114.899 li
337.825 114.419 li
316.345 114.419 li
cp
ef
337.825 114.899 mo
338.305 114.899 li
338.305 114.419 li
337.825 114.419 li
cp
ef
338.305 114.899 mo
359.665 114.899 li
359.665 114.419 li
338.305 114.419 li
cp
ef
359.665 114.899 mo
360.145 114.899 li
360.145 114.419 li
359.665 114.419 li
cp
ef
360.145 114.899 mo
417.529 114.899 li
417.529 114.419 li
360.145 114.419 li
cp
ef
417.535 114.899 mo
418.015 114.899 li
418.015 114.419 li
417.535 114.419 li
cp
ef
418.015 114.899 mo
471.415 114.899 li
471.415 114.419 li
418.015 114.419 li
cp
ef
471.415 114.899 mo
471.895 114.899 li
471.895 114.419 li
471.415 114.419 li
cp
ef
239.285 128.339 mo
239.765 128.339 li
239.765 114.899 li
239.285 114.899 li
cp
ef
272.045 128.339 mo
272.525 128.339 li
272.525 114.899 li
272.045 114.899 li
cp
ef
294.025 128.339 mo
294.505 128.339 li
294.505 114.899 li
294.025 114.899 li
cp
ef
315.865 128.339 mo
316.345 128.339 li
316.345 114.899 li
315.865 114.899 li
cp
ef
337.825 128.339 mo
338.305 128.339 li
338.305 114.899 li
337.825 114.899 li
cp
ef
359.665 128.339 mo
360.145 128.339 li
360.145 114.899 li
359.665 114.899 li
cp
ef
417.535 128.339 mo
418.015 128.339 li
418.015 114.899 li
417.535 114.899 li
cp
ef
471.415 128.339 mo
471.895 128.339 li
471.895 114.899 li
471.415 114.899 li
cp
ef
gsave
239.765 142.259 mo
272.045 142.259 li
272.045 128.819 li
239.765 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 139.139 mo
(t)sh
grestore
gsave
239.765 142.259 mo
272.045 142.259 li
272.045 128.819 li
239.765 128.819 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
4 8330 1013 <00020052ffed03a605210030004200e7b0852b584013292e012a05012904
012903012a2601260a0144b8ffc040200f024d60440131080d014d31100c
0d014c1d7a3101393149316931032b310131b8022c4009000e0e20007000
0200b8ffe0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff0
40120c0d014c753b01363b463b663b03243b013bb8022b400e2f25012540
f220200736f42a5318b80108b10756003fed3fed12392fed012f5de15d5d
5d2b2bc42b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d1b
400f2040f26c2020072a36f46c2a530718b80108b26c075600183f2b3f2b
12392f2b30315901140e0423222e0435343e0233321e0233323e02370606
23222e0235343e0233321e0407342e0223220e0215141e0233323603a614
30517ba9702b51412c140903060b080b283d5233618b582c023594606c93
5927326aa472517d5c402711af2242603f415c3b1c19385a424b8c02ba54
ac9f8b683b0b1012121f1a161a0e050f120f4b7ea65c1f303b668c53569b
7646294d6d8aa14680af6c302f4f64353b6244252d00>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/nine 1013 def
end
LRSZCA+Calibri /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five /six /seven /eight /nine 
10{/.notdef}rp /D /.notdef /F 2{/.notdef}rp /I /.notdef /K 
3{/.notdef}rp /O /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a 
/.notdef /c /.notdef /e /f /g 5{/.notdef}rp /m 
/n /o 2{/.notdef}rp /r /s /t /u /.notdef 
/w /.notdef /y 134{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 140.099 mo
(9)sh
grestore
gsave
239.765 142.259 mo
272.045 142.259 li
272.045 128.819 li
239.765 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
252.125 139.139 mo
( )sh
grestore
gsave
272.645 142.259 mo
294.029 142.259 li
294.029 128.819 li
272.645 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 139.139 mo
(1)sh
grestore
gsave
272.645 142.259 mo
294.029 142.259 li
294.029 128.819 li
272.645 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 139.139 mo
( )sh
grestore
gsave
294.505 142.259 mo
315.865 142.259 li
315.865 128.819 li
294.505 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 139.139 mo
(0)sh
grestore
gsave
294.505 142.259 mo
315.865 142.259 li
315.865 128.819 li
294.505 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 139.139 mo
( )sh
grestore
gsave
316.465 142.259 mo
337.825 142.259 li
337.825 128.819 li
316.465 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 139.139 mo
(0)sh
grestore
gsave
316.465 142.259 mo
337.825 142.259 li
337.825 128.819 li
316.465 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 139.139 mo
( )sh
grestore
gsave
338.305 142.259 mo
359.665 142.259 li
359.665 128.819 li
338.305 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 139.139 mo
(0)sh
grestore
gsave
338.305 142.259 mo
359.665 142.259 li
359.665 128.819 li
338.305 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 139.139 mo
( )sh
grestore
gsave
360.265 142.259 mo
417.529 142.259 li
417.529 128.819 li
360.265 128.819 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
3 8294 882 <0001004501b4022e023d000f0020b0852b58b400070bed04002fed012fcd
31301bb4040bed6c0400182f2b303159011406232122263534363321321e
02022e1211fe5e1212121201a2080d090501f9271e1f26261e06111a>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/hyphen 882 def
end
LRSZCA+Calibri /Encoding get
dup 45 /hyphen put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp 
/zero /one /two /three /four /five /six /seven 
/eight /nine 10{/.notdef}rp /D /.notdef /F 2{/.notdef}rp /I 
/.notdef /K 3{/.notdef}rp /O /P 2{/.notdef}rp /S /T 
12{/.notdef}rp /a /.notdef /c /.notdef /e /f /g 
5{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /t 
/u /.notdef /w /.notdef /y 134{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 139.139 mo
(-)sh
grestore
gsave
360.265 142.259 mo
417.529 142.259 li
417.529 128.819 li
360.265 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
368.665 139.139 mo
( )sh
grestore
gsave
418.015 142.259 mo
471.415 142.259 li
471.415 128.819 li
418.015 128.819 li
cp
eclp
%ADOBeginSubsetFont: JIIAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LRSZCA+Calibri gcheck setglobal} if
2 2990 104 <000100aaffed04790514002b00b5b0852b58401d602d01201810014d2010
0f014d20100d014d200a0c014d20180b014d20b802104011004015014d00
4013014d004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0
b30d014d16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315
014d0ab8ffc0400913014d0a265210521bb80129b10556003fed3f3f012f
2b2be12b2b2b2b2bd42b2b2be12b2b2b2b2b31305d1bb526521052051bb8
0129b26c055600183f2b3f3f30315901140e0223222e023511343e023332
1e021511141e0233323e023511343e0233321e021504794580b8756bb07e
440814201a182213082c5375494b75512b081421191821130901de76b980
423e79b6770323080c070505070c08fcf25a86592d2c5882570317080c07
0505070c0800>LRSZCA+Calibri AddT42Char 
2 13568 364 <00010099fffa037c0571003400b3b0852b58400c3f360129310131401201
4d31b8ffd0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0
b30b014d31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8ff
f6b30c014d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c
014d0016220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f
10f12b2b2b2b32e02b2b2b2b2b31305d5d1b400b220b0528491c46114c05
4c00183f3f3f3f12393930315925140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>LRSZCA+Calibri AddT42Char 
LRSZCA+Calibri /CharStrings get begin
/U 104 def
/k 364 def
end
LRSZCA+Calibri /Encoding get
dup 85 /U put
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LRSZCA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp 
/zero /one /two /three /four /five /six /seven 
/eight /nine 10{/.notdef}rp /D /.notdef /F 2{/.notdef}rp /I 
/.notdef /K 3{/.notdef}rp /O /P 2{/.notdef}rp /S /T 
/U 11{/.notdef}rp /a /.notdef /c /.notdef /e /f 
/g 3{/.notdef}rp /k /.notdef /m /n /o 2{/.notdef}rp 
/r /s /t /u /.notdef /w /.notdef /y 
134{/.notdef}rp]
LRSZCA+Calibri nf
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 139.139 mo
(Unknown)
[7.08765 5.7518 5.02319 5.79593 5.85114 7.89355 0 ]xsh
grestore
gsave
418.015 142.259 mo
471.415 142.259 li
471.415 128.819 li
418.015 128.819 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
466.255 139.139 mo
( )sh
grestore
239.285 128.819 mo
239.765 128.819 li
239.765 128.339 li
239.285 128.339 li
cp
ef
239.765 128.819 mo
272.045 128.819 li
272.045 128.339 li
239.765 128.339 li
cp
ef
272.045 128.819 mo
272.525 128.819 li
272.525 128.339 li
272.045 128.339 li
cp
ef
272.525 128.819 mo
294.029 128.819 li
294.029 128.339 li
272.525 128.339 li
cp
ef
294.025 128.819 mo
294.505 128.819 li
294.505 128.339 li
294.025 128.339 li
cp
ef
294.505 128.819 mo
315.865 128.819 li
315.865 128.339 li
294.505 128.339 li
cp
ef
315.865 128.819 mo
316.345 128.819 li
316.345 128.339 li
315.865 128.339 li
cp
ef
316.345 128.819 mo
337.825 128.819 li
337.825 128.339 li
316.345 128.339 li
cp
ef
337.825 128.819 mo
338.305 128.819 li
338.305 128.339 li
337.825 128.339 li
cp
ef
338.305 128.819 mo
359.665 128.819 li
359.665 128.339 li
338.305 128.339 li
cp
ef
359.665 128.819 mo
360.145 128.819 li
360.145 128.339 li
359.665 128.339 li
cp
ef
360.145 128.819 mo
417.529 128.819 li
417.529 128.339 li
360.145 128.339 li
cp
ef
417.535 128.819 mo
418.015 128.819 li
418.015 128.339 li
417.535 128.339 li
cp
ef
418.015 128.819 mo
471.415 128.819 li
471.415 128.339 li
418.015 128.339 li
cp
ef
471.415 128.819 mo
471.895 128.819 li
471.895 128.339 li
471.415 128.339 li
cp
ef
239.285 142.259 mo
239.765 142.259 li
239.765 128.819 li
239.285 128.819 li
cp
ef
272.045 142.259 mo
272.525 142.259 li
272.525 128.819 li
272.045 128.819 li
cp
ef
294.025 142.259 mo
294.505 142.259 li
294.505 128.819 li
294.025 128.819 li
cp
ef
315.865 142.259 mo
316.345 142.259 li
316.345 128.819 li
315.865 128.819 li
cp
ef
337.825 142.259 mo
338.305 142.259 li
338.305 128.819 li
337.825 128.819 li
cp
ef
359.665 142.259 mo
360.145 142.259 li
360.145 128.819 li
359.665 128.819 li
cp
ef
417.535 142.259 mo
418.015 142.259 li
418.015 128.819 li
417.535 128.819 li
cp
ef
471.415 142.259 mo
471.895 142.259 li
471.895 128.819 li
471.415 128.819 li
cp
ef
gsave
239.765 156.209 mo
272.045 156.209 li
272.045 142.745 li
239.765 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 153.059 mo
(t)sh
grestore
gsave
239.765 156.209 mo
272.045 156.209 li
272.045 142.745 li
239.765 142.745 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 154.019 mo
(1)sh
grestore
gsave
239.765 156.209 mo
272.045 156.209 li
272.045 142.745 li
239.765 142.745 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
252.125 154.019 mo
(0)sh
grestore
gsave
239.765 156.209 mo
272.045 156.209 li
272.045 142.745 li
239.765 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
255.725 153.059 mo
( )sh
grestore
gsave
272.645 156.209 mo
294.029 156.209 li
294.029 142.745 li
272.645 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 153.059 mo
(1)sh
grestore
gsave
272.645 156.209 mo
294.029 156.209 li
294.029 142.745 li
272.645 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 153.059 mo
( )sh
grestore
gsave
294.505 156.209 mo
315.865 156.209 li
315.865 142.745 li
294.505 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 153.059 mo
(0)sh
grestore
gsave
294.505 156.209 mo
315.865 156.209 li
315.865 142.745 li
294.505 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 153.059 mo
( )sh
grestore
gsave
316.465 156.209 mo
337.825 156.209 li
337.825 142.745 li
316.465 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 153.059 mo
(0)sh
grestore
gsave
316.465 156.209 mo
337.825 156.209 li
337.825 142.745 li
316.465 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 153.059 mo
( )sh
grestore
gsave
338.305 156.209 mo
359.665 156.209 li
359.665 142.745 li
338.305 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 153.059 mo
(1)sh
grestore
gsave
338.305 156.209 mo
359.665 156.209 li
359.665 142.745 li
338.305 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 153.059 mo
( )sh
grestore
gsave
360.265 156.209 mo
417.529 156.209 li
417.529 142.745 li
360.265 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 153.059 mo
(-)sh
grestore
gsave
360.265 156.209 mo
417.529 156.209 li
417.529 142.745 li
360.265 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
368.665 153.059 mo
( )sh
grestore
gsave
418.015 156.209 mo
471.415 156.209 li
471.415 142.745 li
418.015 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 153.059 mo
(Unknown)
[7.08765 5.7518 5.02319 5.79593 5.85114 7.89355 0 ]xsh
grestore
gsave
418.015 156.209 mo
471.415 156.209 li
471.415 142.745 li
418.015 142.745 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
466.255 153.059 mo
( )sh
grestore
239.285 142.739 mo
239.765 142.739 li
239.765 142.259 li
239.285 142.259 li
cp
ef
239.765 142.739 mo
272.045 142.739 li
272.045 142.259 li
239.765 142.259 li
cp
ef
272.045 142.739 mo
272.525 142.739 li
272.525 142.259 li
272.045 142.259 li
cp
ef
272.525 142.739 mo
294.029 142.739 li
294.029 142.259 li
272.525 142.259 li
cp
ef
294.025 142.739 mo
294.505 142.739 li
294.505 142.259 li
294.025 142.259 li
cp
ef
294.505 142.739 mo
315.865 142.739 li
315.865 142.259 li
294.505 142.259 li
cp
ef
315.865 142.739 mo
316.345 142.739 li
316.345 142.259 li
315.865 142.259 li
cp
ef
316.345 142.739 mo
337.825 142.739 li
337.825 142.259 li
316.345 142.259 li
cp
ef
337.825 142.739 mo
338.305 142.739 li
338.305 142.259 li
337.825 142.259 li
cp
ef
338.305 142.739 mo
359.665 142.739 li
359.665 142.259 li
338.305 142.259 li
cp
ef
359.665 142.739 mo
360.145 142.739 li
360.145 142.259 li
359.665 142.259 li
cp
ef
360.145 142.739 mo
417.529 142.739 li
417.529 142.259 li
360.145 142.259 li
cp
ef
417.535 142.739 mo
418.015 142.739 li
418.015 142.259 li
417.535 142.259 li
cp
ef
418.015 142.739 mo
471.415 142.739 li
471.415 142.259 li
418.015 142.259 li
cp
ef
471.415 142.739 mo
471.895 142.739 li
471.895 142.259 li
471.415 142.259 li
cp
ef
239.285 156.209 mo
239.765 156.209 li
239.765 142.745 li
239.285 142.745 li
cp
ef
272.045 156.209 mo
272.525 156.209 li
272.525 142.745 li
272.045 142.745 li
cp
ef
294.025 156.209 mo
294.505 156.209 li
294.505 142.745 li
294.025 142.745 li
cp
ef
315.865 156.209 mo
316.345 156.209 li
316.345 142.745 li
315.865 142.745 li
cp
ef
337.825 156.209 mo
338.305 156.209 li
338.305 142.745 li
337.825 142.745 li
cp
ef
359.665 156.209 mo
360.145 156.209 li
360.145 142.745 li
359.665 142.745 li
cp
ef
417.535 156.209 mo
418.015 156.209 li
418.015 142.745 li
417.535 142.745 li
cp
ef
471.415 156.209 mo
471.895 156.209 li
471.895 142.745 li
471.415 142.745 li
cp
ef
gsave
239.765 170.129 mo
272.045 170.129 li
272.045 156.689 li
239.765 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 167.009 mo
(t)sh
grestore
gsave
239.765 170.129 mo
272.045 170.129 li
272.045 156.689 li
239.765 156.689 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 167.969 mo
(1)sh
grestore
gsave
239.765 170.129 mo
272.045 170.129 li
272.045 156.689 li
239.765 156.689 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
252.125 167.969 mo
(1)sh
grestore
gsave
239.765 170.129 mo
272.045 170.129 li
272.045 156.689 li
239.765 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
255.725 167.009 mo
( )sh
grestore
gsave
272.645 170.129 mo
294.029 170.129 li
294.029 156.689 li
272.645 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 167.009 mo
(1)sh
grestore
gsave
272.645 170.129 mo
294.029 170.129 li
294.029 156.689 li
272.645 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 167.009 mo
( )sh
grestore
gsave
294.505 170.129 mo
315.865 170.129 li
315.865 156.689 li
294.505 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 167.009 mo
(0)sh
grestore
gsave
294.505 170.129 mo
315.865 170.129 li
315.865 156.689 li
294.505 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 167.009 mo
( )sh
grestore
gsave
316.465 170.129 mo
337.825 170.129 li
337.825 156.689 li
316.465 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 167.009 mo
(1)sh
grestore
gsave
316.465 170.129 mo
337.825 170.129 li
337.825 156.689 li
316.465 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 167.009 mo
( )sh
grestore
gsave
338.305 170.129 mo
359.665 170.129 li
359.665 156.689 li
338.305 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 167.009 mo
(0)sh
grestore
gsave
338.305 170.129 mo
359.665 170.129 li
359.665 156.689 li
338.305 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 167.009 mo
( )sh
grestore
gsave
360.265 170.129 mo
417.529 170.129 li
417.529 156.689 li
360.265 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 167.009 mo
(-)sh
grestore
gsave
360.265 170.129 mo
417.529 170.129 li
417.529 156.689 li
360.265 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
368.665 167.009 mo
( )sh
grestore
gsave
418.015 170.129 mo
471.415 170.129 li
471.415 156.689 li
418.015 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 167.009 mo
(Unknown)
[7.08765 5.7518 5.02319 5.79593 5.85114 7.89355 0 ]xsh
grestore
gsave
418.015 170.129 mo
471.415 170.129 li
471.415 156.689 li
418.015 156.689 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
466.255 167.009 mo
( )sh
grestore
239.285 156.689 mo
239.765 156.689 li
239.765 156.209 li
239.285 156.209 li
cp
ef
239.765 156.689 mo
272.045 156.689 li
272.045 156.209 li
239.765 156.209 li
cp
ef
272.045 156.689 mo
272.525 156.689 li
272.525 156.209 li
272.045 156.209 li
cp
ef
272.525 156.689 mo
294.029 156.689 li
294.029 156.209 li
272.525 156.209 li
cp
ef
294.025 156.689 mo
294.505 156.689 li
294.505 156.209 li
294.025 156.209 li
cp
ef
294.505 156.689 mo
315.865 156.689 li
315.865 156.209 li
294.505 156.209 li
cp
ef
315.865 156.689 mo
316.345 156.689 li
316.345 156.209 li
315.865 156.209 li
cp
ef
316.345 156.689 mo
337.825 156.689 li
337.825 156.209 li
316.345 156.209 li
cp
ef
337.825 156.689 mo
338.305 156.689 li
338.305 156.209 li
337.825 156.209 li
cp
ef
338.305 156.689 mo
359.665 156.689 li
359.665 156.209 li
338.305 156.209 li
cp
ef
359.665 156.689 mo
360.145 156.689 li
360.145 156.209 li
359.665 156.209 li
cp
ef
360.145 156.689 mo
417.529 156.689 li
417.529 156.209 li
360.145 156.209 li
cp
ef
417.535 156.689 mo
418.015 156.689 li
418.015 156.209 li
417.535 156.209 li
cp
ef
418.015 156.689 mo
471.415 156.689 li
471.415 156.209 li
418.015 156.209 li
cp
ef
471.415 156.689 mo
471.895 156.689 li
471.895 156.209 li
471.415 156.209 li
cp
ef
239.285 170.129 mo
239.765 170.129 li
239.765 156.689 li
239.285 156.689 li
cp
ef
272.045 170.129 mo
272.525 170.129 li
272.525 156.689 li
272.045 156.689 li
cp
ef
294.025 170.129 mo
294.505 170.129 li
294.505 156.689 li
294.025 156.689 li
cp
ef
315.865 170.129 mo
316.345 170.129 li
316.345 156.689 li
315.865 156.689 li
cp
ef
337.825 170.129 mo
338.305 170.129 li
338.305 156.689 li
337.825 156.689 li
cp
ef
359.665 170.129 mo
360.145 170.129 li
360.145 156.689 li
359.665 156.689 li
cp
ef
417.535 170.129 mo
418.015 170.129 li
418.015 156.689 li
417.535 156.689 li
cp
ef
471.415 170.129 mo
471.895 170.129 li
471.895 156.689 li
471.415 156.689 li
cp
ef
gsave
239.765 184.049 mo
272.045 184.049 li
272.045 170.609 li
239.765 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 180.929 mo
(t)sh
grestore
gsave
239.765 184.049 mo
272.045 184.049 li
272.045 170.609 li
239.765 170.609 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 181.889 mo
(1)sh
grestore
gsave
239.765 184.049 mo
272.045 184.049 li
272.045 170.609 li
239.765 170.609 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
252.125 181.889 mo
(2)sh
grestore
gsave
239.765 184.049 mo
272.045 184.049 li
272.045 170.609 li
239.765 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
255.725 180.929 mo
( )sh
grestore
gsave
272.645 184.049 mo
294.029 184.049 li
294.029 170.609 li
272.645 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 180.929 mo
(1)sh
grestore
gsave
272.645 184.049 mo
294.029 184.049 li
294.029 170.609 li
272.645 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 180.929 mo
( )sh
grestore
gsave
294.505 184.049 mo
315.865 184.049 li
315.865 170.609 li
294.505 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 180.929 mo
(0)sh
grestore
gsave
294.505 184.049 mo
315.865 184.049 li
315.865 170.609 li
294.505 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 180.929 mo
( )sh
grestore
gsave
316.465 184.049 mo
337.825 184.049 li
337.825 170.609 li
316.465 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 180.929 mo
(1)sh
grestore
gsave
316.465 184.049 mo
337.825 184.049 li
337.825 170.609 li
316.465 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 180.929 mo
( )sh
grestore
gsave
338.305 184.049 mo
359.665 184.049 li
359.665 170.609 li
338.305 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 180.929 mo
(1)sh
grestore
gsave
338.305 184.049 mo
359.665 184.049 li
359.665 170.609 li
338.305 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 180.929 mo
( )sh
grestore
gsave
360.265 184.049 mo
417.529 184.049 li
417.529 170.609 li
360.265 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 180.929 mo
(-)sh
grestore
gsave
360.265 184.049 mo
417.529 184.049 li
417.529 170.609 li
360.265 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
368.665 180.929 mo
( )sh
grestore
gsave
418.015 184.049 mo
471.415 184.049 li
471.415 170.609 li
418.015 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 180.929 mo
(Unknown)
[7.08765 5.7518 5.02319 5.79593 5.85114 7.89355 0 ]xsh
grestore
gsave
418.015 184.049 mo
471.415 184.049 li
471.415 170.609 li
418.015 170.609 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
466.255 180.929 mo
( )sh
grestore
239.285 170.609 mo
239.765 170.609 li
239.765 170.129 li
239.285 170.129 li
cp
ef
239.765 170.609 mo
272.045 170.609 li
272.045 170.129 li
239.765 170.129 li
cp
ef
272.045 170.609 mo
272.525 170.609 li
272.525 170.129 li
272.045 170.129 li
cp
ef
272.525 170.609 mo
294.029 170.609 li
294.029 170.129 li
272.525 170.129 li
cp
ef
294.025 170.609 mo
294.505 170.609 li
294.505 170.129 li
294.025 170.129 li
cp
ef
294.505 170.609 mo
315.865 170.609 li
315.865 170.129 li
294.505 170.129 li
cp
ef
315.865 170.609 mo
316.345 170.609 li
316.345 170.129 li
315.865 170.129 li
cp
ef
316.345 170.609 mo
337.825 170.609 li
337.825 170.129 li
316.345 170.129 li
cp
ef
337.825 170.609 mo
338.305 170.609 li
338.305 170.129 li
337.825 170.129 li
cp
ef
338.305 170.609 mo
359.665 170.609 li
359.665 170.129 li
338.305 170.129 li
cp
ef
359.665 170.609 mo
360.145 170.609 li
360.145 170.129 li
359.665 170.129 li
cp
ef
360.145 170.609 mo
417.529 170.609 li
417.529 170.129 li
360.145 170.129 li
cp
ef
417.535 170.609 mo
418.015 170.609 li
418.015 170.129 li
417.535 170.129 li
cp
ef
418.015 170.609 mo
471.415 170.609 li
471.415 170.129 li
418.015 170.129 li
cp
ef
471.415 170.609 mo
471.895 170.609 li
471.895 170.129 li
471.415 170.129 li
cp
ef
239.285 184.049 mo
239.765 184.049 li
239.765 170.609 li
239.285 170.609 li
cp
ef
272.045 184.049 mo
272.525 184.049 li
272.525 170.609 li
272.045 170.609 li
cp
ef
294.025 184.049 mo
294.505 184.049 li
294.505 170.609 li
294.025 170.609 li
cp
ef
315.865 184.049 mo
316.345 184.049 li
316.345 170.609 li
315.865 170.609 li
cp
ef
337.825 184.049 mo
338.305 184.049 li
338.305 170.609 li
337.825 170.609 li
cp
ef
359.665 184.049 mo
360.145 184.049 li
360.145 170.609 li
359.665 170.609 li
cp
ef
417.535 184.049 mo
418.015 184.049 li
418.015 170.609 li
417.535 170.609 li
cp
ef
471.415 184.049 mo
471.895 184.049 li
471.895 170.609 li
471.415 170.609 li
cp
ef
gsave
239.765 197.969 mo
272.045 197.969 li
272.045 184.529 li
239.765 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 194.849 mo
(t)sh
grestore
gsave
239.765 197.969 mo
272.045 197.969 li
272.045 184.529 li
239.765 184.529 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 195.809 mo
(1)sh
grestore
gsave
239.765 197.969 mo
272.045 197.969 li
272.045 184.529 li
239.765 184.529 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
252.125 195.809 mo
(3)sh
grestore
gsave
239.765 197.969 mo
272.045 197.969 li
272.045 184.529 li
239.765 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
255.725 194.849 mo
( )sh
grestore
gsave
272.645 197.969 mo
294.029 197.969 li
294.029 184.529 li
272.645 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 194.849 mo
(1)sh
grestore
gsave
272.645 197.969 mo
294.029 197.969 li
294.029 184.529 li
272.645 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 194.849 mo
( )sh
grestore
gsave
294.505 197.969 mo
315.865 197.969 li
315.865 184.529 li
294.505 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 194.849 mo
(1)sh
grestore
gsave
294.505 197.969 mo
315.865 197.969 li
315.865 184.529 li
294.505 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 194.849 mo
( )sh
grestore
gsave
316.465 197.969 mo
337.825 197.969 li
337.825 184.529 li
316.465 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 194.849 mo
(0)sh
grestore
gsave
316.465 197.969 mo
337.825 197.969 li
337.825 184.529 li
316.465 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 194.849 mo
( )sh
grestore
gsave
338.305 197.969 mo
359.665 197.969 li
359.665 184.529 li
338.305 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 194.849 mo
(0)sh
grestore
gsave
338.305 197.969 mo
359.665 197.969 li
359.665 184.529 li
338.305 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 194.849 mo
( )sh
grestore
gsave
360.265 197.969 mo
417.529 197.969 li
417.529 184.529 li
360.265 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 194.849 mo
(F)sh
grestore
gsave
360.265 197.969 mo
417.529 197.969 li
417.529 184.529 li
360.265 184.529 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.345 195.809 mo
(1)sh
grestore
gsave
360.265 197.969 mo
417.529 197.969 li
417.529 184.529 li
360.265 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
373.945 194.849 mo
( )sh
grestore
gsave
418.015 197.969 mo
471.415 197.969 li
471.415 184.529 li
418.015 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 194.849 mo
(I)sh
grestore
gsave
418.015 197.969 mo
471.415 197.969 li
471.415 184.529 li
418.015 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
425.935 194.849 mo
(nfer)
[5.76282 3.36713 5.49792 0 ]xsh
grestore
gsave
418.015 197.969 mo
471.415 197.969 li
471.415 184.529 li
418.015 184.529 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
444.415 194.849 mo
( )sh
grestore
239.285 184.529 mo
239.765 184.529 li
239.765 184.049 li
239.285 184.049 li
cp
ef
239.765 184.529 mo
272.045 184.529 li
272.045 184.049 li
239.765 184.049 li
cp
ef
272.045 184.529 mo
272.525 184.529 li
272.525 184.049 li
272.045 184.049 li
cp
ef
272.525 184.529 mo
294.029 184.529 li
294.029 184.049 li
272.525 184.049 li
cp
ef
294.025 184.529 mo
294.505 184.529 li
294.505 184.049 li
294.025 184.049 li
cp
ef
294.505 184.529 mo
315.865 184.529 li
315.865 184.049 li
294.505 184.049 li
cp
ef
315.865 184.529 mo
316.345 184.529 li
316.345 184.049 li
315.865 184.049 li
cp
ef
316.345 184.529 mo
337.825 184.529 li
337.825 184.049 li
316.345 184.049 li
cp
ef
337.825 184.529 mo
338.305 184.529 li
338.305 184.049 li
337.825 184.049 li
cp
ef
338.305 184.529 mo
359.665 184.529 li
359.665 184.049 li
338.305 184.049 li
cp
ef
359.665 184.529 mo
360.145 184.529 li
360.145 184.049 li
359.665 184.049 li
cp
ef
360.145 184.529 mo
417.529 184.529 li
417.529 184.049 li
360.145 184.049 li
cp
ef
417.535 184.529 mo
418.015 184.529 li
418.015 184.049 li
417.535 184.049 li
cp
ef
418.015 184.529 mo
471.415 184.529 li
471.415 184.049 li
418.015 184.049 li
cp
ef
471.415 184.529 mo
471.895 184.529 li
471.895 184.049 li
471.415 184.049 li
cp
ef
239.285 197.969 mo
239.765 197.969 li
239.765 184.529 li
239.285 184.529 li
cp
ef
272.045 197.969 mo
272.525 197.969 li
272.525 184.529 li
272.045 184.529 li
cp
ef
294.025 197.969 mo
294.505 197.969 li
294.505 184.529 li
294.025 184.529 li
cp
ef
315.865 197.969 mo
316.345 197.969 li
316.345 184.529 li
315.865 184.529 li
cp
ef
337.825 197.969 mo
338.305 197.969 li
338.305 184.529 li
337.825 184.529 li
cp
ef
359.665 197.969 mo
360.145 197.969 li
360.145 184.529 li
359.665 184.529 li
cp
ef
417.535 197.969 mo
418.015 197.969 li
418.015 184.529 li
417.535 184.529 li
cp
ef
471.415 197.969 mo
471.895 197.969 li
471.895 184.529 li
471.415 184.529 li
cp
ef
gsave
239.765 211.889 mo
272.045 211.889 li
272.045 198.449 li
239.765 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 208.769 mo
(t)sh
grestore
gsave
239.765 211.889 mo
272.045 211.889 li
272.045 198.449 li
239.765 198.449 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 209.729 mo
(1)sh
grestore
gsave
239.765 211.889 mo
272.045 211.889 li
272.045 198.449 li
239.765 198.449 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
252.125 209.729 mo
(4)sh
grestore
gsave
239.765 211.889 mo
272.045 211.889 li
272.045 198.449 li
239.765 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
255.725 208.769 mo
( )sh
grestore
gsave
272.645 211.889 mo
294.029 211.889 li
294.029 198.449 li
272.645 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 208.769 mo
(1)sh
grestore
gsave
272.645 211.889 mo
294.029 211.889 li
294.029 198.449 li
272.645 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 208.769 mo
( )sh
grestore
gsave
294.505 211.889 mo
315.865 211.889 li
315.865 198.449 li
294.505 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 208.769 mo
(1)sh
grestore
gsave
294.505 211.889 mo
315.865 211.889 li
315.865 198.449 li
294.505 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 208.769 mo
( )sh
grestore
gsave
316.465 211.889 mo
337.825 211.889 li
337.825 198.449 li
316.465 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 208.769 mo
(0)sh
grestore
gsave
316.465 211.889 mo
337.825 211.889 li
337.825 198.449 li
316.465 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 208.769 mo
( )sh
grestore
gsave
338.305 211.889 mo
359.665 211.889 li
359.665 198.449 li
338.305 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 208.769 mo
(1)sh
grestore
gsave
338.305 211.889 mo
359.665 211.889 li
359.665 198.449 li
338.305 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 208.769 mo
( )sh
grestore
gsave
360.265 211.889 mo
417.529 211.889 li
417.529 198.449 li
360.265 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 208.769 mo
(F)sh
grestore
gsave
360.265 211.889 mo
417.529 211.889 li
417.529 198.449 li
360.265 198.449 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.345 209.729 mo
(1)sh
grestore
gsave
360.265 211.889 mo
417.529 211.889 li
417.529 198.449 li
360.265 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
373.945 208.769 mo
( )sh
grestore
gsave
418.015 211.889 mo
471.415 211.889 li
471.415 198.449 li
418.015 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 208.769 mo
(I)sh
grestore
gsave
418.015 211.889 mo
471.415 211.889 li
471.415 198.449 li
418.015 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
425.935 208.769 mo
(nfer)
[5.76282 3.36713 5.49792 0 ]xsh
grestore
gsave
418.015 211.889 mo
471.415 211.889 li
471.415 198.449 li
418.015 198.449 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
444.415 208.769 mo
( )sh
grestore
239.285 198.449 mo
239.765 198.449 li
239.765 197.969 li
239.285 197.969 li
cp
ef
239.765 198.449 mo
272.045 198.449 li
272.045 197.969 li
239.765 197.969 li
cp
ef
272.045 198.449 mo
272.525 198.449 li
272.525 197.969 li
272.045 197.969 li
cp
ef
272.525 198.449 mo
294.029 198.449 li
294.029 197.969 li
272.525 197.969 li
cp
ef
294.025 198.449 mo
294.505 198.449 li
294.505 197.969 li
294.025 197.969 li
cp
ef
294.505 198.449 mo
315.865 198.449 li
315.865 197.969 li
294.505 197.969 li
cp
ef
315.865 198.449 mo
316.345 198.449 li
316.345 197.969 li
315.865 197.969 li
cp
ef
316.345 198.449 mo
337.825 198.449 li
337.825 197.969 li
316.345 197.969 li
cp
ef
337.825 198.449 mo
338.305 198.449 li
338.305 197.969 li
337.825 197.969 li
cp
ef
338.305 198.449 mo
359.665 198.449 li
359.665 197.969 li
338.305 197.969 li
cp
ef
359.665 198.449 mo
360.145 198.449 li
360.145 197.969 li
359.665 197.969 li
cp
ef
360.145 198.449 mo
417.529 198.449 li
417.529 197.969 li
360.145 197.969 li
cp
ef
417.535 198.449 mo
418.015 198.449 li
418.015 197.969 li
417.535 197.969 li
cp
ef
418.015 198.449 mo
471.415 198.449 li
471.415 197.969 li
418.015 197.969 li
cp
ef
471.415 198.449 mo
471.895 198.449 li
471.895 197.969 li
471.415 197.969 li
cp
ef
239.285 211.889 mo
239.765 211.889 li
239.765 198.449 li
239.285 198.449 li
cp
ef
272.045 211.889 mo
272.525 211.889 li
272.525 198.449 li
272.045 198.449 li
cp
ef
294.025 211.889 mo
294.505 211.889 li
294.505 198.449 li
294.025 198.449 li
cp
ef
315.865 211.889 mo
316.345 211.889 li
316.345 198.449 li
315.865 198.449 li
cp
ef
337.825 211.889 mo
338.305 211.889 li
338.305 198.449 li
337.825 198.449 li
cp
ef
359.665 211.889 mo
360.145 211.889 li
360.145 198.449 li
359.665 198.449 li
cp
ef
417.535 211.889 mo
418.015 211.889 li
418.015 198.449 li
417.535 198.449 li
cp
ef
471.415 211.889 mo
471.895 211.889 li
471.895 198.449 li
471.415 198.449 li
cp
ef
gsave
239.765 225.809 mo
272.045 225.809 li
272.045 212.369 li
239.765 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 222.689 mo
(t)sh
grestore
gsave
239.765 225.809 mo
272.045 225.809 li
272.045 212.369 li
239.765 212.369 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 223.649 mo
(1)sh
grestore
gsave
239.765 225.809 mo
272.045 225.809 li
272.045 212.369 li
239.765 212.369 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
252.125 223.649 mo
(5)sh
grestore
gsave
239.765 225.809 mo
272.045 225.809 li
272.045 212.369 li
239.765 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
255.725 222.689 mo
( )sh
grestore
gsave
272.645 225.809 mo
294.029 225.809 li
294.029 212.369 li
272.645 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 222.689 mo
(1)sh
grestore
gsave
272.645 225.809 mo
294.029 225.809 li
294.029 212.369 li
272.645 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 222.689 mo
( )sh
grestore
gsave
294.505 225.809 mo
315.865 225.809 li
315.865 212.369 li
294.505 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 222.689 mo
(1)sh
grestore
gsave
294.505 225.809 mo
315.865 225.809 li
315.865 212.369 li
294.505 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 222.689 mo
( )sh
grestore
gsave
316.465 225.809 mo
337.825 225.809 li
337.825 212.369 li
316.465 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 222.689 mo
(1)sh
grestore
gsave
316.465 225.809 mo
337.825 225.809 li
337.825 212.369 li
316.465 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 222.689 mo
( )sh
grestore
gsave
338.305 225.809 mo
359.665 225.809 li
359.665 212.369 li
338.305 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 222.689 mo
(0)sh
grestore
gsave
338.305 225.809 mo
359.665 225.809 li
359.665 212.369 li
338.305 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 222.689 mo
( )sh
grestore
gsave
360.265 225.809 mo
417.529 225.809 li
417.529 212.369 li
360.265 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 222.689 mo
(F)sh
grestore
gsave
360.265 225.809 mo
417.529 225.809 li
417.529 212.369 li
360.265 212.369 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.345 223.649 mo
(1)sh
grestore
gsave
360.265 225.809 mo
417.529 225.809 li
417.529 212.369 li
360.265 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
373.945 222.689 mo
( )sh
grestore
gsave
418.015 225.809 mo
471.415 225.809 li
471.415 212.369 li
418.015 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 222.689 mo
(I)sh
grestore
gsave
418.015 225.809 mo
471.415 225.809 li
471.415 212.369 li
418.015 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
425.935 222.689 mo
(nfer)
[5.76282 3.36713 5.49792 0 ]xsh
grestore
gsave
418.015 225.809 mo
471.415 225.809 li
471.415 212.369 li
418.015 212.369 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
444.415 222.689 mo
( )sh
grestore
239.285 212.369 mo
239.765 212.369 li
239.765 211.889 li
239.285 211.889 li
cp
ef
239.765 212.369 mo
272.045 212.369 li
272.045 211.889 li
239.765 211.889 li
cp
ef
272.045 212.369 mo
272.525 212.369 li
272.525 211.889 li
272.045 211.889 li
cp
ef
272.525 212.369 mo
294.029 212.369 li
294.029 211.889 li
272.525 211.889 li
cp
ef
294.025 212.369 mo
294.505 212.369 li
294.505 211.889 li
294.025 211.889 li
cp
ef
294.505 212.369 mo
315.865 212.369 li
315.865 211.889 li
294.505 211.889 li
cp
ef
315.865 212.369 mo
316.345 212.369 li
316.345 211.889 li
315.865 211.889 li
cp
ef
316.345 212.369 mo
337.825 212.369 li
337.825 211.889 li
316.345 211.889 li
cp
ef
337.825 212.369 mo
338.305 212.369 li
338.305 211.889 li
337.825 211.889 li
cp
ef
338.305 212.369 mo
359.665 212.369 li
359.665 211.889 li
338.305 211.889 li
cp
ef
359.665 212.369 mo
360.145 212.369 li
360.145 211.889 li
359.665 211.889 li
cp
ef
360.145 212.369 mo
417.529 212.369 li
417.529 211.889 li
360.145 211.889 li
cp
ef
417.535 212.369 mo
418.015 212.369 li
418.015 211.889 li
417.535 211.889 li
cp
ef
418.015 212.369 mo
471.415 212.369 li
471.415 211.889 li
418.015 211.889 li
cp
ef
471.415 212.369 mo
471.895 212.369 li
471.895 211.889 li
471.415 211.889 li
cp
ef
239.285 225.809 mo
239.765 225.809 li
239.765 212.369 li
239.285 212.369 li
cp
ef
272.045 225.809 mo
272.525 225.809 li
272.525 212.369 li
272.045 212.369 li
cp
ef
294.025 225.809 mo
294.505 225.809 li
294.505 212.369 li
294.025 212.369 li
cp
ef
315.865 225.809 mo
316.345 225.809 li
316.345 212.369 li
315.865 212.369 li
cp
ef
337.825 225.809 mo
338.305 225.809 li
338.305 212.369 li
337.825 212.369 li
cp
ef
359.665 225.809 mo
360.145 225.809 li
360.145 212.369 li
359.665 212.369 li
cp
ef
417.535 225.809 mo
418.015 225.809 li
418.015 212.369 li
417.535 212.369 li
cp
ef
471.415 225.809 mo
471.895 225.809 li
471.895 212.369 li
471.415 212.369 li
cp
ef
gsave
239.765 239.729 mo
272.045 239.729 li
272.045 226.289 li
239.765 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
244.925 236.609 mo
(t)sh
grestore
gsave
239.765 239.729 mo
272.045 239.729 li
272.045 226.289 li
239.765 226.289 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
248.645 237.569 mo
(1)sh
grestore
gsave
239.765 239.729 mo
272.045 239.729 li
272.045 226.289 li
239.765 226.289 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
252.125 237.569 mo
(6)sh
grestore
gsave
239.765 239.729 mo
272.045 239.729 li
272.045 226.289 li
239.765 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
255.725 236.609 mo
( )sh
grestore
gsave
272.645 239.729 mo
294.029 239.729 li
294.029 226.289 li
272.645 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
277.685 236.609 mo
(1)sh
grestore
gsave
272.645 239.729 mo
294.029 239.729 li
294.029 226.289 li
272.645 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
283.225 236.609 mo
( )sh
grestore
gsave
294.505 239.729 mo
315.865 239.729 li
315.865 226.289 li
294.505 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.665 236.609 mo
(1)sh
grestore
gsave
294.505 239.729 mo
315.865 239.729 li
315.865 226.289 li
294.505 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
305.185 236.609 mo
( )sh
grestore
gsave
316.465 239.729 mo
337.825 239.729 li
337.825 226.289 li
316.465 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
321.505 236.609 mo
(1)sh
grestore
gsave
316.465 239.729 mo
337.825 239.729 li
337.825 226.289 li
316.465 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
327.025 236.609 mo
( )sh
grestore
gsave
338.305 239.729 mo
359.665 239.729 li
359.665 226.289 li
338.305 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
343.465 236.609 mo
(1)sh
grestore
gsave
338.305 239.729 mo
359.665 239.729 li
359.665 226.289 li
338.305 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
348.985 236.609 mo
( )sh
grestore
gsave
360.265 239.729 mo
417.529 239.729 li
417.529 226.289 li
360.265 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
365.305 236.609 mo
(F)sh
grestore
gsave
360.265 239.729 mo
417.529 239.729 li
417.529 226.289 li
360.265 226.289 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.345 237.569 mo
(1)sh
grestore
gsave
360.265 239.729 mo
417.529 239.729 li
417.529 226.289 li
360.265 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
373.945 236.609 mo
( )sh
grestore
gsave
418.015 239.729 mo
471.415 239.729 li
471.415 226.289 li
418.015 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
423.175 236.609 mo
(Known)
[5.74084 5.79593 5.85114 7.89352 0 ]xsh
grestore
gsave
418.015 239.729 mo
471.415 239.729 li
471.415 226.289 li
418.015 226.289 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
454.135 236.609 mo
( )sh
grestore
239.285 226.289 mo
239.765 226.289 li
239.765 225.809 li
239.285 225.809 li
cp
ef
239.765 226.289 mo
272.045 226.289 li
272.045 225.809 li
239.765 225.809 li
cp
ef
272.045 226.289 mo
272.525 226.289 li
272.525 225.809 li
272.045 225.809 li
cp
ef
272.525 226.289 mo
294.029 226.289 li
294.029 225.809 li
272.525 225.809 li
cp
ef
294.025 226.289 mo
294.505 226.289 li
294.505 225.809 li
294.025 225.809 li
cp
ef
294.505 226.289 mo
315.865 226.289 li
315.865 225.809 li
294.505 225.809 li
cp
ef
315.865 226.289 mo
316.345 226.289 li
316.345 225.809 li
315.865 225.809 li
cp
ef
316.345 226.289 mo
337.825 226.289 li
337.825 225.809 li
316.345 225.809 li
cp
ef
337.825 226.289 mo
338.305 226.289 li
338.305 225.809 li
337.825 225.809 li
cp
ef
338.305 226.289 mo
359.665 226.289 li
359.665 225.809 li
338.305 225.809 li
cp
ef
359.665 226.289 mo
360.145 226.289 li
360.145 225.809 li
359.665 225.809 li
cp
ef
360.145 226.289 mo
417.529 226.289 li
417.529 225.809 li
360.145 225.809 li
cp
ef
417.535 226.289 mo
418.015 226.289 li
418.015 225.809 li
417.535 225.809 li
cp
ef
418.015 226.289 mo
471.415 226.289 li
471.415 225.809 li
418.015 225.809 li
cp
ef
471.415 226.289 mo
471.895 226.289 li
471.895 225.809 li
471.415 225.809 li
cp
ef
239.285 239.849 mo
239.765 239.849 li
239.765 226.289 li
239.285 226.289 li
cp
ef
239.285 240.329 mo
239.765 240.329 li
239.765 239.849 li
239.285 239.849 li
cp
ef
239.285 240.329 mo
239.765 240.329 li
239.765 239.849 li
239.285 239.849 li
cp
ef
239.765 240.329 mo
272.045 240.329 li
272.045 239.849 li
239.765 239.849 li
cp
ef
272.045 239.849 mo
272.525 239.849 li
272.525 226.289 li
272.045 226.289 li
cp
ef
272.045 240.329 mo
272.525 240.329 li
272.525 239.849 li
272.045 239.849 li
cp
ef
272.525 240.329 mo
294.029 240.329 li
294.029 239.849 li
272.525 239.849 li
cp
ef
294.025 239.849 mo
294.505 239.849 li
294.505 226.289 li
294.025 226.289 li
cp
ef
294.025 240.329 mo
294.505 240.329 li
294.505 239.849 li
294.025 239.849 li
cp
ef
294.505 240.329 mo
315.865 240.329 li
315.865 239.849 li
294.505 239.849 li
cp
ef
315.865 239.849 mo
316.345 239.849 li
316.345 226.289 li
315.865 226.289 li
cp
ef
315.865 240.329 mo
316.345 240.329 li
316.345 239.849 li
315.865 239.849 li
cp
ef
316.345 240.329 mo
337.825 240.329 li
337.825 239.849 li
316.345 239.849 li
cp
ef
337.825 239.849 mo
338.305 239.849 li
338.305 226.289 li
337.825 226.289 li
cp
ef
337.825 240.329 mo
338.305 240.329 li
338.305 239.849 li
337.825 239.849 li
cp
ef
338.305 240.329 mo
359.665 240.329 li
359.665 239.849 li
338.305 239.849 li
cp
ef
359.665 239.849 mo
360.145 239.849 li
360.145 226.289 li
359.665 226.289 li
cp
ef
359.665 240.329 mo
360.145 240.329 li
360.145 239.849 li
359.665 239.849 li
cp
ef
360.145 240.329 mo
417.529 240.329 li
417.529 239.849 li
360.145 239.849 li
cp
ef
417.535 239.849 mo
418.015 239.849 li
418.015 226.289 li
417.535 226.289 li
cp
ef
417.535 240.329 mo
418.015 240.329 li
418.015 239.849 li
417.535 239.849 li
cp
ef
418.015 240.329 mo
471.415 240.329 li
471.415 239.849 li
418.015 239.849 li
cp
ef
471.415 239.849 mo
471.895 239.849 li
471.895 226.289 li
471.415 226.289 li
cp
ef
471.415 240.329 mo
471.895 240.329 li
471.895 239.849 li
471.415 239.849 li
cp
ef
471.415 240.329 mo
471.895 240.329 li
471.895 239.849 li
471.415 239.849 li
cp
ef
gsave
4.29941 94.4992 mo
31.0594 94.4992 li
31.0594 81.0592 li
4.29941 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
9.45941 91.3792 mo
(I)sh
grestore
gsave
4.29941 94.4992 mo
31.0594 94.4992 li
31.0594 81.0592 li
4.29941 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
12.2194 91.3792 mo
(D)sh
grestore
gsave
4.29941 94.4992 mo
31.0594 94.4992 li
31.0594 81.0592 li
4.29941 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
18.9394 91.3792 mo
( )sh
grestore
gsave
31.5394 94.4992 mo
121.179 94.4992 li
121.179 81.0592 li
31.5394 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
55.7754 91.3792 mo
(T)sh
grestore
gsave
31.5394 94.4992 mo
121.179 94.4992 li
121.179 81.0592 li
31.5394 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
61.1754 91.3792 mo
(est )
[5.49792 4.31671 3.7316 0 ]xsh
grestore
gsave
31.5394 94.4992 mo
121.179 94.4992 li
121.179 81.0592 li
31.5394 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
77.1354 91.3792 mo
(case)
[4.66997 5.28821 4.31671 0 ]xsh
grestore
gsave
31.5394 94.4992 mo
121.179 94.4992 li
121.179 81.0592 li
31.5394 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
96.8154 91.3792 mo
( )sh
grestore
gsave
121.655 94.4992 mo
173.399 94.4992 li
173.399 81.0592 li
121.655 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
126.815 91.3792 mo
(Outcome)
[7.3085 5.79594 3.69847 4.66997 5.76279 8.86508 0 ]xsh
grestore
gsave
121.655 94.4992 mo
173.399 94.4992 li
173.399 81.0592 li
121.655 81.0592 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
168.365 91.3792 mo
( )sh
grestore
3.81941 81.0592 mo
4.29942 81.0592 li
4.29942 80.5792 li
3.81941 80.5792 li
cp
ef
3.81941 81.0592 mo
4.29942 81.0592 li
4.29942 80.5792 li
3.81941 80.5792 li
cp
ef
4.29941 81.0592 mo
31.0594 81.0592 li
31.0594 80.5792 li
4.29941 80.5792 li
cp
ef
31.0594 81.0592 mo
31.5394 81.0592 li
31.5394 80.5792 li
31.0594 80.5792 li
cp
ef
31.5394 81.0592 mo
121.179 81.0592 li
121.179 80.5792 li
31.5394 80.5792 li
cp
ef
121.175 81.0592 mo
121.655 81.0592 li
121.655 80.5792 li
121.175 80.5792 li
cp
ef
121.655 81.0592 mo
173.399 81.0592 li
173.399 80.5792 li
121.655 80.5792 li
cp
ef
173.405 81.0592 mo
173.885 81.0592 li
173.885 80.5792 li
173.405 80.5792 li
cp
ef
173.405 81.0592 mo
173.885 81.0592 li
173.885 80.5792 li
173.405 80.5792 li
cp
ef
3.81941 94.4992 mo
4.29942 94.4992 li
4.29942 81.0592 li
3.81941 81.0592 li
cp
ef
31.0594 94.4992 mo
31.5394 94.4992 li
31.5394 81.0592 li
31.0594 81.0592 li
cp
ef
121.175 94.4992 mo
121.655 94.4992 li
121.655 81.0592 li
121.175 81.0592 li
cp
ef
173.405 94.4992 mo
173.885 94.4992 li
173.885 81.0592 li
173.405 81.0592 li
cp
ef
gsave
4.29941 108.419 mo
31.0594 108.419 li
31.0594 94.9792 li
4.29941 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
9.45941 105.299 mo
(t)sh
grestore
gsave
4.29941 108.419 mo
31.0594 108.419 li
31.0594 94.9792 li
4.29941 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
13.1794 105.299 mo
( )sh
grestore
gsave
31.5394 108.419 mo
55.4194 108.419 li
55.4194 94.9792 li
31.5394 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
36.6954 105.299 mo
(1)sh
grestore
gsave
31.5394 108.419 mo
55.4194 108.419 li
55.4194 94.9792 li
31.5394 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
42.2154 105.299 mo
( )sh
grestore
gsave
55.8954 108.419 mo
77.3754 108.419 li
77.3754 94.9792 li
55.8954 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
61.0554 105.299 mo
(1)sh
grestore
gsave
55.8954 108.419 mo
77.3754 108.419 li
77.3754 94.9792 li
55.8954 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
66.5754 105.299 mo
( )sh
grestore
gsave
77.8554 108.419 mo
99.2154 108.419 li
99.2154 94.9792 li
77.8554 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
83.0154 105.299 mo
(1)sh
grestore
gsave
77.8554 108.419 mo
99.2154 108.419 li
99.2154 94.9792 li
77.8554 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
88.5354 105.299 mo
( )sh
grestore
gsave
99.6954 108.419 mo
121.055 108.419 li
121.055 94.9792 li
99.6954 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
104.855 105.299 mo
(1)sh
grestore
gsave
99.6954 108.419 mo
121.055 108.419 li
121.055 94.9792 li
99.6954 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
110.375 105.299 mo
( )sh
grestore
gsave
121.655 108.419 mo
173.399 108.419 li
173.399 94.9792 li
121.655 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
126.815 105.299 mo
(F)sh
grestore
gsave
121.655 108.419 mo
173.399 108.419 li
173.399 94.9792 li
121.655 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
131.855 106.259 mo
(1)sh
grestore
gsave
121.655 108.419 mo
173.399 108.419 li
173.399 94.9792 li
121.655 94.9792 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
135.455 105.299 mo
( )sh
grestore
3.81941 94.9792 mo
4.29942 94.9792 li
4.29942 94.4992 li
3.81941 94.4992 li
cp
ef
4.29941 94.9792 mo
31.0594 94.9792 li
31.0594 94.4992 li
4.29941 94.4992 li
cp
ef
31.0594 94.9792 mo
31.5394 94.9792 li
31.5394 94.4992 li
31.0594 94.4992 li
cp
ef
31.5394 94.9792 mo
55.4194 94.9792 li
55.4194 94.4992 li
31.5394 94.4992 li
cp
ef
55.4154 94.9792 mo
55.8954 94.9792 li
55.8954 94.4992 li
55.4154 94.4992 li
cp
ef
55.8954 94.9792 mo
77.3754 94.9792 li
77.3754 94.4992 li
55.8954 94.4992 li
cp
ef
77.3754 94.9792 mo
77.8554 94.9792 li
77.8554 94.4992 li
77.3754 94.4992 li
cp
ef
77.8554 94.9792 mo
99.2154 94.9792 li
99.2154 94.4992 li
77.8554 94.4992 li
cp
ef
99.2154 94.9792 mo
99.6954 94.9792 li
99.6954 94.4992 li
99.2154 94.4992 li
cp
ef
99.6954 94.9792 mo
121.175 94.9792 li
121.175 94.4992 li
99.6954 94.4992 li
cp
ef
121.175 94.9792 mo
121.655 94.9792 li
121.655 94.4992 li
121.175 94.4992 li
cp
ef
121.655 94.9792 mo
173.399 94.9792 li
173.399 94.4992 li
121.655 94.4992 li
cp
ef
173.405 94.9792 mo
173.885 94.9792 li
173.885 94.4992 li
173.405 94.4992 li
cp
ef
3.81941 108.419 mo
4.29942 108.419 li
4.29942 94.9792 li
3.81941 94.9792 li
cp
ef
31.0594 108.419 mo
31.5394 108.419 li
31.5394 94.9792 li
31.0594 94.9792 li
cp
ef
55.4154 108.419 mo
55.8954 108.419 li
55.8954 94.9792 li
55.4154 94.9792 li
cp
ef
77.3754 108.419 mo
77.8554 108.419 li
77.8554 94.9792 li
77.3754 94.9792 li
cp
ef
99.2154 108.419 mo
99.6954 108.419 li
99.6954 94.9792 li
99.2154 94.9792 li
cp
ef
121.175 108.419 mo
121.655 108.419 li
121.655 94.9792 li
121.175 94.9792 li
cp
ef
173.405 108.419 mo
173.885 108.419 li
173.885 94.9792 li
173.405 94.9792 li
cp
ef
gsave
4.29941 122.339 mo
31.0594 122.339 li
31.0594 109.019 li
4.29941 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
9.45941 119.339 mo
(t)sh
grestore
gsave
4.29941 122.339 mo
31.0594 122.339 li
31.0594 109.019 li
4.29941 109.019 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
13.1794 120.299 mo
(1)sh
grestore
gsave
4.29941 122.339 mo
31.0594 122.339 li
31.0594 109.019 li
4.29941 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
16.6594 119.339 mo
( )sh
grestore
gsave
31.5394 122.339 mo
55.4194 122.339 li
55.4194 109.019 li
31.5394 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
36.6954 119.339 mo
(0)sh
grestore
gsave
31.5394 122.339 mo
55.4194 122.339 li
55.4194 109.019 li
31.5394 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
42.2154 119.339 mo
( )sh
grestore
gsave
55.8954 122.339 mo
77.3754 122.339 li
77.3754 109.019 li
55.8954 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
61.0554 119.339 mo
(0)sh
grestore
gsave
55.8954 122.339 mo
77.3754 122.339 li
77.3754 109.019 li
55.8954 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
66.5754 119.339 mo
( )sh
grestore
gsave
77.8554 122.339 mo
99.2154 122.339 li
99.2154 109.019 li
77.8554 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
83.0154 119.339 mo
(1)sh
grestore
gsave
77.8554 122.339 mo
99.2154 122.339 li
99.2154 109.019 li
77.8554 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
88.5354 119.339 mo
( )sh
grestore
gsave
99.6954 122.339 mo
121.055 122.339 li
121.055 109.019 li
99.6954 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
104.855 119.339 mo
(1)sh
grestore
gsave
99.6954 122.339 mo
121.055 122.339 li
121.055 109.019 li
99.6954 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
110.375 119.339 mo
( )sh
grestore
gsave
121.655 122.339 mo
173.399 122.339 li
173.399 109.019 li
121.655 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
126.815 119.339 mo
(Pass)
[5.75182 5.28821 4.31671 0 ]xsh
grestore
gsave
121.655 122.339 mo
173.399 122.339 li
173.399 109.019 li
121.655 109.019 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
146.405 119.339 mo
( )sh
grestore
3.81941 108.899 mo
4.29942 108.899 li
4.29942 108.419 li
3.81941 108.419 li
cp
ef
4.29941 108.899 mo
31.0594 108.899 li
31.0594 108.419 li
4.29941 108.419 li
cp
ef
31.0594 108.899 mo
31.5394 108.899 li
31.5394 108.419 li
31.0594 108.419 li
cp
ef
31.5394 108.899 mo
55.4194 108.899 li
55.4194 108.419 li
31.5394 108.419 li
cp
ef
55.4154 108.899 mo
55.8954 108.899 li
55.8954 108.419 li
55.4154 108.419 li
cp
ef
55.8954 108.899 mo
77.3754 108.899 li
77.3754 108.419 li
55.8954 108.419 li
cp
ef
77.3754 108.899 mo
77.8554 108.899 li
77.8554 108.419 li
77.3754 108.419 li
cp
ef
77.8554 108.899 mo
99.2154 108.899 li
99.2154 108.419 li
77.8554 108.419 li
cp
ef
99.2154 108.899 mo
99.6954 108.899 li
99.6954 108.419 li
99.2154 108.419 li
cp
ef
99.6954 108.899 mo
121.175 108.899 li
121.175 108.419 li
99.6954 108.419 li
cp
ef
121.175 108.899 mo
121.655 108.899 li
121.655 108.419 li
121.175 108.419 li
cp
ef
121.655 108.899 mo
173.399 108.899 li
173.399 108.419 li
121.655 108.419 li
cp
ef
173.405 108.899 mo
173.885 108.899 li
173.885 108.419 li
173.405 108.419 li
cp
ef
3.81941 122.339 mo
4.29942 122.339 li
4.29942 108.899 li
3.81941 108.899 li
cp
ef
31.0594 122.339 mo
31.5394 122.339 li
31.5394 108.899 li
31.0594 108.899 li
cp
ef
55.4154 122.339 mo
55.8954 122.339 li
55.8954 108.899 li
55.4154 108.899 li
cp
ef
77.3754 122.339 mo
77.8554 122.339 li
77.8554 108.899 li
77.3754 108.899 li
cp
ef
99.2154 122.339 mo
99.6954 122.339 li
99.6954 108.899 li
99.2154 108.899 li
cp
ef
121.175 122.339 mo
121.655 122.339 li
121.655 108.899 li
121.175 108.899 li
cp
ef
173.405 122.339 mo
173.885 122.339 li
173.885 108.899 li
173.405 108.899 li
cp
ef
gsave
4.29941 136.379 mo
31.0594 136.379 li
31.0594 122.939 li
4.29941 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
9.45941 133.259 mo
(t)sh
grestore
gsave
4.29941 136.379 mo
31.0594 136.379 li
31.0594 122.939 li
4.29941 122.939 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
13.1794 134.219 mo
(2)sh
grestore
gsave
4.29941 136.379 mo
31.0594 136.379 li
31.0594 122.939 li
4.29941 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
16.6594 133.259 mo
( )sh
grestore
gsave
31.5394 136.379 mo
55.4194 136.379 li
55.4194 122.939 li
31.5394 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
36.6954 133.259 mo
(0)sh
grestore
gsave
31.5394 136.379 mo
55.4194 136.379 li
55.4194 122.939 li
31.5394 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
42.2154 133.259 mo
( )sh
grestore
gsave
55.8954 136.379 mo
77.3754 136.379 li
77.3754 122.939 li
55.8954 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
61.0554 133.259 mo
(1)sh
grestore
gsave
55.8954 136.379 mo
77.3754 136.379 li
77.3754 122.939 li
55.8954 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
66.5754 133.259 mo
( )sh
grestore
gsave
77.8554 136.379 mo
99.2154 136.379 li
99.2154 122.939 li
77.8554 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
83.0154 133.259 mo
(1)sh
grestore
gsave
77.8554 136.379 mo
99.2154 136.379 li
99.2154 122.939 li
77.8554 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
88.5354 133.259 mo
( )sh
grestore
gsave
99.6954 136.379 mo
121.055 136.379 li
121.055 122.939 li
99.6954 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
104.855 133.259 mo
(1)sh
grestore
gsave
99.6954 136.379 mo
121.055 136.379 li
121.055 122.939 li
99.6954 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
110.375 133.259 mo
( )sh
grestore
gsave
121.655 136.379 mo
173.399 136.379 li
173.399 122.939 li
121.655 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
126.815 133.259 mo
(F)sh
grestore
gsave
121.655 136.379 mo
173.399 136.379 li
173.399 122.939 li
121.655 122.939 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
131.855 134.219 mo
(1)sh
grestore
gsave
121.655 136.379 mo
173.399 136.379 li
173.399 122.939 li
121.655 122.939 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
135.455 133.259 mo
( )sh
grestore
3.81941 122.819 mo
4.29942 122.819 li
4.29942 122.339 li
3.81941 122.339 li
cp
ef
4.29941 122.819 mo
31.0594 122.819 li
31.0594 122.339 li
4.29941 122.339 li
cp
ef
31.0594 122.819 mo
31.5394 122.819 li
31.5394 122.339 li
31.0594 122.339 li
cp
ef
31.5394 122.819 mo
55.4194 122.819 li
55.4194 122.339 li
31.5394 122.339 li
cp
ef
55.4154 122.819 mo
55.8954 122.819 li
55.8954 122.339 li
55.4154 122.339 li
cp
ef
55.8954 122.819 mo
77.3754 122.819 li
77.3754 122.339 li
55.8954 122.339 li
cp
ef
77.3754 122.819 mo
77.8554 122.819 li
77.8554 122.339 li
77.3754 122.339 li
cp
ef
77.8554 122.819 mo
99.2154 122.819 li
99.2154 122.339 li
77.8554 122.339 li
cp
ef
99.2154 122.819 mo
99.6954 122.819 li
99.6954 122.339 li
99.2154 122.339 li
cp
ef
99.6954 122.819 mo
121.175 122.819 li
121.175 122.339 li
99.6954 122.339 li
cp
ef
121.175 122.819 mo
121.655 122.819 li
121.655 122.339 li
121.175 122.339 li
cp
ef
121.655 122.819 mo
173.399 122.819 li
173.399 122.339 li
121.655 122.339 li
cp
ef
173.405 122.819 mo
173.885 122.819 li
173.885 122.339 li
173.405 122.339 li
cp
ef
3.81941 136.379 mo
4.29942 136.379 li
4.29942 122.819 li
3.81941 122.819 li
cp
ef
31.0594 136.379 mo
31.5394 136.379 li
31.5394 122.819 li
31.0594 122.819 li
cp
ef
55.4154 136.379 mo
55.8954 136.379 li
55.8954 122.819 li
55.4154 122.819 li
cp
ef
77.3754 136.379 mo
77.8554 136.379 li
77.8554 122.819 li
77.3754 122.819 li
cp
ef
99.2154 136.379 mo
99.6954 136.379 li
99.6954 122.819 li
99.2154 122.819 li
cp
ef
121.175 136.379 mo
121.655 136.379 li
121.655 122.819 li
121.175 122.819 li
cp
ef
173.405 136.379 mo
173.885 136.379 li
173.885 122.819 li
173.405 122.819 li
cp
ef
gsave
4.29941 150.299 mo
31.0594 150.299 li
31.0594 136.859 li
4.29941 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
9.45941 147.179 mo
(t)sh
grestore
gsave
4.29941 150.299 mo
31.0594 150.299 li
31.0594 136.859 li
4.29941 136.859 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
13.1794 148.139 mo
(3)sh
grestore
gsave
4.29941 150.299 mo
31.0594 150.299 li
31.0594 136.859 li
4.29941 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
16.6594 147.179 mo
( )sh
grestore
gsave
31.5394 150.299 mo
55.4194 150.299 li
55.4194 136.859 li
31.5394 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
36.6954 147.179 mo
(0 )
[5.64002 0 ]xsh
grestore
gsave
31.5394 150.299 mo
55.4194 150.299 li
55.4194 136.859 li
31.5394 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
44.7354 147.179 mo
( )sh
grestore
gsave
55.8954 150.299 mo
77.3754 150.299 li
77.3754 136.859 li
55.8954 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
61.0554 147.179 mo
(1)sh
grestore
gsave
55.8954 150.299 mo
77.3754 150.299 li
77.3754 136.859 li
55.8954 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
66.5754 147.179 mo
( )sh
grestore
gsave
77.8554 150.299 mo
99.2154 150.299 li
99.2154 136.859 li
77.8554 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
83.0154 147.179 mo
(0)sh
grestore
gsave
77.8554 150.299 mo
99.2154 150.299 li
99.2154 136.859 li
77.8554 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
88.5354 147.179 mo
( )sh
grestore
gsave
99.6954 150.299 mo
121.055 150.299 li
121.055 136.859 li
99.6954 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
104.855 147.179 mo
(0)sh
grestore
gsave
99.6954 150.299 mo
121.055 150.299 li
121.055 136.859 li
99.6954 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
110.375 147.179 mo
( )sh
grestore
gsave
121.655 150.299 mo
173.399 150.299 li
173.399 136.859 li
121.655 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
126.815 147.179 mo
(F)sh
grestore
gsave
121.655 150.299 mo
173.399 150.299 li
173.399 136.859 li
121.655 136.859 li
cp
eclp
LRSZCA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
131.855 148.139 mo
(2)sh
grestore
gsave
121.655 150.299 mo
173.399 150.299 li
173.399 136.859 li
121.655 136.859 li
cp
eclp
LRSZCA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
135.455 147.179 mo
( )sh
grestore
3.81941 136.859 mo
4.29942 136.859 li
4.29942 136.379 li
3.81941 136.379 li
cp
ef
4.29941 136.859 mo
31.0594 136.859 li
31.0594 136.379 li
4.29941 136.379 li
cp
ef
31.0594 136.859 mo
31.5394 136.859 li
31.5394 136.379 li
31.0594 136.379 li
cp
ef
31.5394 136.859 mo
55.4194 136.859 li
55.4194 136.379 li
31.5394 136.379 li
cp
ef
55.4154 136.859 mo
55.8954 136.859 li
55.8954 136.379 li
55.4154 136.379 li
cp
ef
55.8954 136.859 mo
77.3754 136.859 li
77.3754 136.379 li
55.8954 136.379 li
cp
ef
77.3754 136.859 mo
77.8554 136.859 li
77.8554 136.379 li
77.3754 136.379 li
cp
ef
77.8554 136.859 mo
99.2154 136.859 li
99.2154 136.379 li
77.8554 136.379 li
cp
ef
99.2154 136.859 mo
99.6954 136.859 li
99.6954 136.379 li
99.2154 136.379 li
cp
ef
99.6954 136.859 mo
121.175 136.859 li
121.175 136.379 li
99.6954 136.379 li
cp
ef
121.175 136.859 mo
121.655 136.859 li
121.655 136.379 li
121.175 136.379 li
cp
ef
121.655 136.859 mo
173.399 136.859 li
173.399 136.379 li
121.655 136.379 li
cp
ef
173.405 136.859 mo
173.885 136.859 li
173.885 136.379 li
173.405 136.379 li
cp
ef
3.81941 150.299 mo
4.29942 150.299 li
4.29942 136.859 li
3.81941 136.859 li
cp
ef
3.81941 150.779 mo
4.29942 150.779 li
4.29942 150.299 li
3.81941 150.299 li
cp
ef
3.81941 150.779 mo
4.29942 150.779 li
4.29942 150.299 li
3.81941 150.299 li
cp
ef
4.29941 150.779 mo
31.0594 150.779 li
31.0594 150.299 li
4.29941 150.299 li
cp
ef
31.0594 150.299 mo
31.5394 150.299 li
31.5394 136.859 li
31.0594 136.859 li
cp
ef
31.0594 150.779 mo
31.5394 150.779 li
31.5394 150.299 li
31.0594 150.299 li
cp
ef
31.5394 150.779 mo
55.4194 150.779 li
55.4194 150.299 li
31.5394 150.299 li
cp
ef
55.4154 150.299 mo
55.8954 150.299 li
55.8954 136.859 li
55.4154 136.859 li
cp
ef
55.4154 150.779 mo
55.8954 150.779 li
55.8954 150.299 li
55.4154 150.299 li
cp
ef
55.8954 150.779 mo
77.3754 150.779 li
77.3754 150.299 li
55.8954 150.299 li
cp
ef
77.3754 150.299 mo
77.8554 150.299 li
77.8554 136.859 li
77.3754 136.859 li
cp
ef
77.3754 150.779 mo
77.8554 150.779 li
77.8554 150.299 li
77.3754 150.299 li
cp
ef
77.8554 150.779 mo
99.2154 150.779 li
99.2154 150.299 li
77.8554 150.299 li
cp
ef
99.2154 150.299 mo
99.6954 150.299 li
99.6954 136.859 li
99.2154 136.859 li
cp
ef
99.2154 150.779 mo
99.6954 150.779 li
99.6954 150.299 li
99.2154 150.299 li
cp
ef
99.6954 150.779 mo
121.175 150.779 li
121.175 150.299 li
99.6954 150.299 li
cp
ef
121.175 150.299 mo
121.655 150.299 li
121.655 136.859 li
121.175 136.859 li
cp
ef
121.175 150.779 mo
121.655 150.779 li
121.655 150.299 li
121.175 150.299 li
cp
ef
121.655 150.779 mo
173.399 150.779 li
173.399 150.299 li
121.655 150.299 li
cp
ef
173.405 150.299 mo
173.885 150.299 li
173.885 136.859 li
173.405 136.859 li
cp
ef
173.405 150.779 mo
173.885 150.779 li
173.885 150.299 li
173.405 150.299 li
cp
ef
173.405 150.779 mo
173.885 150.779 li
173.885 150.299 li
173.405 150.299 li
cp
ef
183.795 108.039 mo
212.715 108.039 li
212.715 100.719 li
227.355 115.359 li
212.715 129.999 li
212.715 122.679 li
183.795 122.679 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
.96 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
183.795 108.039 mo
212.715 108.039 li
212.715 100.719 li
227.355 115.359 li
212.715 129.999 li
212.715 122.679 li
183.795 122.679 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/LRSZCA+Calibri*1 uf
/LRSZCA+Calibri uf
/JIIAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
